{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\pfe2\\\\ClusterForm\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [machines, setMachines] = useState([]);\n  const loadMachines = () => {\n    const storedMachines = JSON.parse(localStorage.getItem(\"vms\")) || [];\n    setMachines(storedMachines);\n  };\n  useEffect(() => {\n    loadMachines();\n    const handleStorageChange = () => loadMachines();\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, []);\n  const handleStart = async machine => {\n    try {\n      const requestData = {\n        mode: machine.mode || \"local\",\n        vm_name: machine.hostname\n      };\n      if (machine.mode === \"distant\") {\n        if (!machine.remote_ip) {\n          alert(\"Pour le mode distant, veuillez renseigner l'adresse IP de la machine distante.\");\n          return;\n        }\n        requestData.remote_ip = machine.remote_ip;\n        requestData.remote_user = machine.remote_user;\n        requestData.remote_password = machine.remote_password;\n        requestData.remote_os = machine.remote_os;\n      }\n      const response = await fetch(\"http://localhost:5000/start-vm\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(`✅ ${data.message}`);\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n  const handleStop = async machine => {\n    try {\n      const requestData = {\n        mode: machine.mode || \"local\",\n        vm_name: machine.hostname\n      };\n      if (machine.mode === \"distant\") {\n        if (!machine.remote_ip) {\n          alert(\"Pour le mode distant, veuillez renseigner l'adresse IP de la machine distante.\");\n          return;\n        }\n        requestData.remote_ip = machine.remote_ip;\n        requestData.remote_user = machine.remote_user;\n        requestData.remote_password = machine.remote_password;\n        requestData.remote_os = machine.remote_os;\n      }\n      const response = await fetch(\"http://localhost:5000/stop-vm\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(`✅ ${data.message}`);\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n  const handleDelete = async (machine, index) => {\n    try {\n      const vmName = machine.hostname;\n      if (!vmName) {\n        alert(\"Erreur: Le nom de la VM n'est pas défini.\");\n        return;\n      }\n      const requestData = {\n        mode: machine.mode || \"local\",\n        vm_name: vmName\n      };\n      if (machine.mode === \"distant\") {\n        if (!machine.remote_ip) {\n          alert(\"Pour le mode distant, veuillez renseigner l'adresse IP de la machine distante.\");\n          return;\n        }\n        requestData.remote_ip = machine.remote_ip;\n        requestData.remote_user = machine.remote_user;\n        requestData.remote_password = machine.remote_password;\n        requestData.remote_os = machine.remote_os;\n      }\n      const response = await fetch(\"http://localhost:5000/delete-vm\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(`✅ ${data.message}`);\n        const updatedMachines = machines.filter((_, idx) => idx !== index);\n        localStorage.setItem(\"vms\", JSON.stringify(updatedMachines));\n        setMachines(updatedMachines);\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n  const handleOpenTerminal = async machine => {\n    try {\n      const requestData = {\n        mode: machine.mode || \"local\",\n        vm_name: machine.hostname\n      };\n      if (machine.mode === \"distant\") {\n        if (!machine.remote_ip) {\n          alert(\"Pour le mode distant, veuillez renseigner l'adresse IP de la machine distante.\");\n          return;\n        }\n        requestData.remote_ip = machine.remote_ip;\n        requestData.remote_user = machine.remote_user;\n        requestData.remote_password = machine.remote_password;\n        requestData.remote_os = machine.remote_os;\n      }\n      const response = await fetch(\"http://localhost:5000/open-terminal-vm\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        alert(`SSH Configuration:\\n${data.sshConfig}`);\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n  const filteredMachines = machines.filter(machine => machine.hostname.toLowerCase().includes(searchTerm.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 bg-gradient-to-b from-teal-100 to-white min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-center text-teal-600\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search...\",\n        className: \"p-2 border rounded-md\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"min-w-full border-collapse border border-gray-300 rounded-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-3 border\",\n            children: \"Host Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-3 border\",\n            children: \"Box\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-3 border\",\n            children: \"Network\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-3 border\",\n            children: \"RAM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-3 border\",\n            children: \"CPU\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-3 border\",\n            children: \"Date of Creation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-3 border\",\n            children: \"SSH Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-3 border\",\n            children: \"Mode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"p-3 border\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: filteredMachines.map((machine, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"text-center border-b\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-3 border\",\n            children: machine.hostname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-3 border\",\n            children: machine.box\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-3 border\",\n            children: machine.network\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-3 border\",\n            children: machine.ram\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-3 border\",\n            children: machine.cpu\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-3 border\",\n            children: machine.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-3 border\",\n            children: `${machine.ipAddress}:${machine.port}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-3 border\",\n            children: machine.mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"p-3 border flex justify-around\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleStart(machine),\n              className: \"text-green-500 hover:text-green-700\",\n              children: \"\\u25B6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleStop(machine),\n              className: \"text-yellow-500 hover:text-yellow-700\",\n              children: \"\\u25A0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleOpenTerminal(machine),\n              className: \"text-blue-500 hover:text-blue-700\",\n              children: \"\\u2398\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleDelete(machine, index),\n              className: \"text-red-500 hover:text-red-700\",\n              children: \"\\u2716\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"VFFTZxtPoE00eiwrt14EbFUrync=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Dashboard","_s","searchTerm","setSearchTerm","machines","setMachines","loadMachines","storedMachines","JSON","parse","localStorage","getItem","handleStorageChange","window","addEventListener","removeEventListener","handleStart","machine","requestData","mode","vm_name","hostname","remote_ip","alert","remote_user","remote_password","remote_os","response","fetch","method","headers","body","stringify","data","json","ok","message","error","console","handleStop","handleDelete","index","vmName","updatedMachines","filter","_","idx","setItem","handleOpenTerminal","sshConfig","filteredMachines","toLowerCase","includes","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","box","network","ram","cpu","date","ipAddress","port","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/pfe2/ClusterForm/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nconst Dashboard = () => {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [machines, setMachines] = useState([]);\n\n  const loadMachines = () => {\n    const storedMachines = JSON.parse(localStorage.getItem(\"vms\")) || [];\n    setMachines(storedMachines);\n  };\n\n  useEffect(() => {\n    loadMachines();\n\n    const handleStorageChange = () => loadMachines();\n    window.addEventListener(\"storage\", handleStorageChange);\n\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, []);\n\n  const handleStart = async (machine) => {\n    try {\n      const requestData = {\n        mode: machine.mode || \"local\",\n        vm_name: machine.hostname,\n      };\n\n      if (machine.mode === \"distant\") {\n        if (!machine.remote_ip) {\n          alert(\"Pour le mode distant, veuillez renseigner l'adresse IP de la machine distante.\");\n          return;\n        }\n        requestData.remote_ip = machine.remote_ip;\n        requestData.remote_user = machine.remote_user;\n        requestData.remote_password = machine.remote_password;\n        requestData.remote_os = machine.remote_os;\n      }\n\n      const response = await fetch(\"http://localhost:5000/start-vm\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(requestData),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        alert(`✅ ${data.message}`);\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n\n  const handleStop = async (machine) => {\n    try {\n      const requestData = {\n        mode: machine.mode || \"local\",\n        vm_name: machine.hostname,\n      };\n\n      if (machine.mode === \"distant\") {\n        if (!machine.remote_ip) {\n          alert(\"Pour le mode distant, veuillez renseigner l'adresse IP de la machine distante.\");\n          return;\n        }\n        requestData.remote_ip = machine.remote_ip;\n        requestData.remote_user = machine.remote_user;\n        requestData.remote_password = machine.remote_password;\n        requestData.remote_os = machine.remote_os;\n      }\n\n      const response = await fetch(\"http://localhost:5000/stop-vm\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(requestData),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        alert(`✅ ${data.message}`);\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n\n  const handleDelete = async (machine, index) => {\n    try {\n      const vmName = machine.hostname;\n      if (!vmName) {\n        alert(\"Erreur: Le nom de la VM n'est pas défini.\");\n        return;\n      }\n\n      const requestData = {\n        mode: machine.mode || \"local\",\n        vm_name: vmName,\n      };\n\n      if (machine.mode === \"distant\") {\n        if (!machine.remote_ip) {\n          alert(\"Pour le mode distant, veuillez renseigner l'adresse IP de la machine distante.\");\n          return;\n        }\n        requestData.remote_ip = machine.remote_ip;\n        requestData.remote_user = machine.remote_user;\n        requestData.remote_password = machine.remote_password;\n        requestData.remote_os = machine.remote_os;\n      }\n\n      const response = await fetch(\"http://localhost:5000/delete-vm\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(requestData),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        alert(`✅ ${data.message}`);\n        const updatedMachines = machines.filter((_, idx) => idx !== index);\n        localStorage.setItem(\"vms\", JSON.stringify(updatedMachines));\n        setMachines(updatedMachines);\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n\n  const handleOpenTerminal = async (machine) => {\n    try {\n      const requestData = {\n        mode: machine.mode || \"local\",\n        vm_name: machine.hostname,\n      };\n\n      if (machine.mode === \"distant\") {\n        if (!machine.remote_ip) {\n          alert(\"Pour le mode distant, veuillez renseigner l'adresse IP de la machine distante.\");\n          return;\n        }\n        requestData.remote_ip = machine.remote_ip;\n        requestData.remote_user = machine.remote_user;\n        requestData.remote_password = machine.remote_password;\n        requestData.remote_os = machine.remote_os;\n      }\n\n      const response = await fetch(\"http://localhost:5000/open-terminal-vm\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(requestData),\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        alert(`SSH Configuration:\\n${data.sshConfig}`);\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n\n  const filteredMachines = machines.filter((machine) =>\n    machine.hostname.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <div className=\"p-6 bg-gradient-to-b from-teal-100 to-white min-h-screen\">\n      <h1 className=\"text-4xl font-bold text-center text-teal-600\">Dashboard</h1>\n      <div className=\"flex justify-end p-4\">\n        <input\n          type=\"text\"\n          placeholder=\"Search...\"\n          className=\"p-2 border rounded-md\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n      </div>\n      <table className=\"min-w-full border-collapse border border-gray-300 rounded-lg\">\n        <thead>\n          <tr className=\"bg-gray-100\">\n            <th className=\"p-3 border\">Host Name</th>\n            <th className=\"p-3 border\">Box</th>\n            <th className=\"p-3 border\">Network</th>\n            <th className=\"p-3 border\">RAM</th>\n            <th className=\"p-3 border\">CPU</th>\n            <th className=\"p-3 border\">Date of Creation</th>\n            <th className=\"p-3 border\">SSH Address</th>\n            <th className=\"p-3 border\">Mode</th>\n            <th className=\"p-3 border\">Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          {filteredMachines.map((machine, index) => (\n            <tr key={index} className=\"text-center border-b\">\n              <td className=\"p-3 border\">{machine.hostname}</td>\n              <td className=\"p-3 border\">{machine.box}</td>\n              <td className=\"p-3 border\">{machine.network}</td>\n              <td className=\"p-3 border\">{machine.ram}</td>\n              <td className=\"p-3 border\">{machine.cpu}</td>\n\n              <td className=\"p-3 border\">{machine.date}</td>\n              <td className=\"p-3 border\">{`${machine.ipAddress}:${machine.port}`}</td>\n              <td className=\"p-3 border\">{machine.mode}</td>\n              <td className=\"p-3 border flex justify-around\">\n                <button onClick={() => handleStart(machine)} className=\"text-green-500 hover:text-green-700\">\n                  ▶\n                </button>\n                <button onClick={() => handleStop(machine)} className=\"text-yellow-500 hover:text-yellow-700\">\n                  ■\n                </button>\n                <button onClick={() => handleOpenTerminal(machine)} className=\"text-blue-500 hover:text-blue-700\">\n                  ⎘\n                </button>\n                <button onClick={() => handleDelete(machine, index)} className=\"text-red-500 hover:text-red-700\">\n                  ✖\n                </button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}