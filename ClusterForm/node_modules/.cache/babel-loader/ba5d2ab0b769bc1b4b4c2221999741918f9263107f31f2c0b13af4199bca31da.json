{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\formvm\\\\ClusterForm\\\\src\\\\ClusterformVir.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport OSVersionSelect from './OSVersionSelect';\nimport CustomBox from './CustomBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ClusterFormVir() {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [isCustomBoxOpen, setIsCustomBoxOpen] = useState(false);\n  const [customRam, setCustomRam] = useState(4);\n  const [customCpu, setCustomCpu] = useState(2);\n  const [customBoxes, setCustomBoxes] = useState(() => {\n    // Récupérer les boxes personnalisées depuis localStorage\n    const savedBoxes = localStorage.getItem(\"customBoxes\");\n    return savedBoxes ? JSON.parse(savedBoxes) : []; // Si aucune box n'est trouvée, retourner un tableau vide\n  });\n  const [osOptions, setOsOptions] = useState(() => {\n    const savedOptions = localStorage.getItem(\"osOptions\");\n    return savedOptions ? JSON.parse(savedOptions) : [\"ubuntu/trusty64\", \"ubuntu-focal\", \"ubuntu-bionic\"];\n  });\n  // Récupération des données globales du cluster transmises depuis ClusterVir\n  const {\n    clusterName,\n    clusterDescription,\n    nodeCount,\n    clusterType\n  } = location.state;\n  const [currentNode, setCurrentNode] = useState(0);\n  const [nodeDetails, setNodeDetails] = useState(Array.from({\n    length: nodeCount\n  }, () => ({\n    hostname: \"\",\n    osVersion: \"ubuntu/bionic64\",\n    ram: 4,\n    cpu: 2,\n    ip: \"\",\n    nodeDescription: \"\",\n    isNameNode: false,\n    isResourceManager: false,\n    isDataNode: false\n  })));\n  useEffect(() => {\n    const handleStorageChange = e => {\n      if (e.key === \"osOptions\") {\n        setOsOptions(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, []);\n  const handleNodeDetailsChange = (field, value) => {\n    setNodeDetails(prev => {\n      const updatedDetails = [...prev];\n      updatedDetails[currentNode][field] = value;\n      return updatedDetails;\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (currentNode < nodeCount - 1) {\n      // Passer au formulaire du nœud suivant\n      setCurrentNode(currentNode + 1);\n      setNodeDetails(prev => {\n        const updatedDetails = [...prev];\n        updatedDetails[currentNode + 1] = {\n          ...updatedDetails[currentNode + 1],\n          hostname: \"\",\n          ip: \"\",\n          nodeDescription: \"\",\n          isNameNode: false,\n          isResourceManager: false,\n          isDataNode: false\n        };\n        return updatedDetails;\n      });\n    } else {\n      // Au dernier nœud, rassembler toutes les données et appeler l'API\n      const clusterData = {\n        clusterName,\n        clusterDescription,\n        nodeCount,\n        clusterType,\n        nodeDetails\n      };\n      fetch(\"http://localhost:5000/create_cluster\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(clusterData)\n      }).then(response => {\n        if (!response.ok) {\n          throw new Error(\"Erreur lors de la création du cluster\");\n        }\n        return response.json();\n      }).then(data => {\n        console.log(\"Cluster créé:\", data);\n        // Rediriger vers le dashboard ou afficher un message de succès\n        navigate(\"/ClusterDashVir\", {\n          state: data\n        });\n      }).catch(error => {\n        console.error(\"Erreur:\", error);\n        // Vous pouvez afficher un message d'erreur ici\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/ClusterDashVir\"),\n        className: \"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-teal-600 mb-6\",\n      children: \"Cluster Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium mb-2\",\n        children: \"Host Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nodeDetails[currentNode].hostname,\n        onChange: e => handleNodeDetailsChange(\"hostname\", e.target.value),\n        className: \"w-full p-2 border rounded mb-4\",\n        placeholder: `Enter host name ${currentNode + 1}`,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium mb-2\",\n        children: \"OS Version:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: nodeDetails[currentNode].osVersion,\n        onChange: e => handleNodeDetailsChange(\"osVersion\", e.target.value),\n        className: \"w-full p-2 border rounded mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ubuntu/trusty64\",\n          children: \"ubuntu/trusty64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ubuntu-focal\",\n          children: \"Ubuntu-focal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ubuntu-bionic\",\n          children: \"Ubuntu-bionic\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: [\"RAM: \", nodeDetails[currentNode].ram, \" GB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"2\",\n        max: \"16\",\n        step: \"2\",\n        value: nodeDetails[currentNode].ram,\n        onChange: e => handleNodeDetailsChange(\"ram\", Number(e.target.value)),\n        className: \"w-full mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: [\"CPU: \", nodeDetails[currentNode].cpu, \" vCPUs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"8\",\n        step: \"1\",\n        value: nodeDetails[currentNode].cpu,\n        onChange: e => handleNodeDetailsChange(\"cpu\", Number(e.target.value)),\n        className: \"w-full mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium mb-2\",\n        children: \"IP:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nodeDetails[currentNode].ip,\n        onChange: e => handleNodeDetailsChange(\"ip\", e.target.value),\n        className: \"w-full p-2 border rounded mb-4\",\n        placeholder: `IP address for node ${currentNode + 1}`,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium mb-2\",\n        children: \"Node Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: nodeDetails[currentNode].nodeDescription,\n        onChange: e => handleNodeDetailsChange(\"nodeDescription\", e.target.value),\n        className: \"w-full p-2 border rounded mb-4\",\n        placeholder: `Enter node ${currentNode + 1} description`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: nodeDetails[currentNode].isNameNode,\n            onChange: e => handleNodeDetailsChange(\"isNameNode\", e.target.checked),\n            className: \"form-checkbox h-5 w-5 text-teal-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-gray-700\",\n            children: \"Name Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-flex items-center ml-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: nodeDetails[currentNode].isResourceManager,\n            onChange: e => handleNodeDetailsChange(\"isResourceManager\", e.target.checked),\n            className: \"form-checkbox h-5 w-5 text-teal-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-gray-700\",\n            children: \"Resource Manager\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"inline-flex items-center ml-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: nodeDetails[currentNode].isDataNode,\n            onChange: e => handleNodeDetailsChange(\"isDataNode\", e.target.checked),\n            className: \"form-checkbox h-5 w-5 text-teal-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ml-2 text-gray-700\",\n            children: \"Data Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\",\n        children: currentNode < nodeCount - 1 ? \"Next\" : \"Submit Cluster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 5\n  }, this);\n}\n_s(ClusterFormVir, \"TV9ZpeUZikws/wW8JEG0lWhHbt8=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ClusterFormVir;\nvar _c;\n$RefreshReg$(_c, \"ClusterFormVir\");","map":{"version":3,"names":["React","useState","useLocation","useNavigate","OSVersionSelect","CustomBox","jsxDEV","_jsxDEV","ClusterFormVir","_s","location","navigate","isCustomBoxOpen","setIsCustomBoxOpen","customRam","setCustomRam","customCpu","setCustomCpu","customBoxes","setCustomBoxes","savedBoxes","localStorage","getItem","JSON","parse","osOptions","setOsOptions","savedOptions","clusterName","clusterDescription","nodeCount","clusterType","state","currentNode","setCurrentNode","nodeDetails","setNodeDetails","Array","from","length","hostname","osVersion","ram","cpu","ip","nodeDescription","isNameNode","isResourceManager","isDataNode","useEffect","handleStorageChange","e","key","newValue","window","addEventListener","removeEventListener","handleNodeDetailsChange","field","value","prev","updatedDetails","handleSubmit","preventDefault","clusterData","fetch","method","headers","body","stringify","then","response","ok","Error","json","data","console","log","catch","error","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","placeholder","required","min","max","step","Number","checked","_c","$RefreshReg$"],"sources":["C:/Users/User/formvm/ClusterForm/src/ClusterformVir.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport OSVersionSelect from './OSVersionSelect';\r\nimport CustomBox from './CustomBox';\r\nexport default function ClusterFormVir() {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n  const [isCustomBoxOpen, setIsCustomBoxOpen] = useState(false);\r\n  const [customRam, setCustomRam] = useState(4);\r\n  const [customCpu, setCustomCpu] = useState(2);\r\n  const [customBoxes, setCustomBoxes] = useState(() => {\r\n    // Récupérer les boxes personnalisées depuis localStorage\r\n    const savedBoxes = localStorage.getItem(\"customBoxes\");\r\n    return savedBoxes ? JSON.parse(savedBoxes) : []; // Si aucune box n'est trouvée, retourner un tableau vide\r\n  });\r\n  const [osOptions, setOsOptions] = useState(() => {\r\n    const savedOptions = localStorage.getItem(\"osOptions\");\r\n    return savedOptions ? JSON.parse(savedOptions) : [\"ubuntu/trusty64\", \"ubuntu-focal\", \"ubuntu-bionic\"];\r\n  });\r\n  // Récupération des données globales du cluster transmises depuis ClusterVir\r\n  const { clusterName, clusterDescription, nodeCount, clusterType } = location.state;\r\n\r\n  const [currentNode, setCurrentNode] = useState(0);\r\n  const [nodeDetails, setNodeDetails] = useState(\r\n    Array.from({ length: nodeCount }, () => ({\r\n      hostname: \"\",\r\n      osVersion: \"ubuntu/bionic64\",\r\n      ram: 4,\r\n      cpu: 2,\r\n      ip: \"\",\r\n      nodeDescription: \"\",\r\n      isNameNode: false,\r\n      isResourceManager: false,\r\n      isDataNode: false,\r\n    }))\r\n  );\r\n  useEffect(() => {\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === \"osOptions\") {\r\n        setOsOptions(JSON.parse(e.newValue));\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"storage\", handleStorageChange);\r\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\r\n  }, []);\r\n\r\n  const handleNodeDetailsChange = (field, value) => {\r\n    setNodeDetails((prev) => {\r\n      const updatedDetails = [...prev];\r\n      updatedDetails[currentNode][field] = value;\r\n      return updatedDetails;\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (currentNode < nodeCount - 1) {\r\n      // Passer au formulaire du nœud suivant\r\n      setCurrentNode(currentNode + 1);\r\n      setNodeDetails((prev) => {\r\n        const updatedDetails = [...prev];\r\n        updatedDetails[currentNode + 1] = {\r\n          ...updatedDetails[currentNode + 1],\r\n          hostname: \"\",\r\n          ip: \"\",\r\n          nodeDescription: \"\",\r\n          isNameNode: false,\r\n          isResourceManager: false,\r\n          isDataNode: false,\r\n        };\r\n        return updatedDetails;\r\n      });\r\n    } else {\r\n      // Au dernier nœud, rassembler toutes les données et appeler l'API\r\n      const clusterData = {\r\n        clusterName,\r\n        clusterDescription,\r\n        nodeCount,\r\n        clusterType,\r\n        nodeDetails,\r\n      };\r\n\r\n      fetch(\"http://localhost:5000/create_cluster\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(clusterData),\r\n      })\r\n        .then((response) => {\r\n          if (!response.ok) {\r\n            throw new Error(\"Erreur lors de la création du cluster\");\r\n          }\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          console.log(\"Cluster créé:\", data);\r\n          // Rediriger vers le dashboard ou afficher un message de succès\r\n          navigate(\"/ClusterDashVir\", { state: data });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Erreur:\", error);\r\n          // Vous pouvez afficher un message d'erreur ici\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\">\r\n      <div className=\"absolute top-4 right-4\">\r\n        <button\r\n          onClick={() => navigate(\"/ClusterDashVir\")}\r\n          className=\"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\"\r\n        >\r\n          Dashboard\r\n        </button>\r\n      </div>\r\n      <h1 className=\"text-4xl font-bold text-teal-600 mb-6\">Cluster Form</h1>\r\n\r\n      <form onSubmit={handleSubmit} className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\r\n        <label className=\"block text-sm font-medium mb-2\">Host Name:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={nodeDetails[currentNode].hostname}\r\n          onChange={(e) => handleNodeDetailsChange(\"hostname\", e.target.value)}\r\n          className=\"w-full p-2 border rounded mb-4\"\r\n          placeholder={`Enter host name ${currentNode + 1}`}\r\n          required\r\n        />\r\n\r\n        <label className=\"block text-sm font-medium mb-2\">OS Version:</label>\r\n        <select\r\n          value={nodeDetails[currentNode].osVersion}\r\n          onChange={(e) => handleNodeDetailsChange(\"osVersion\", e.target.value)}\r\n          className=\"w-full p-2 border rounded mb-4\"\r\n        >\r\n          <option value=\"ubuntu/trusty64\">ubuntu/trusty64</option>\r\n          <option value=\"ubuntu-focal\">Ubuntu-focal</option>\r\n          <option value=\"ubuntu-bionic\">Ubuntu-bionic</option>\r\n        </select>\r\n\r\n        <label className=\"block text-sm font-medium\">RAM: {nodeDetails[currentNode].ram} GB</label>\r\n        <input\r\n          type=\"range\"\r\n          min=\"2\"\r\n          max=\"16\"\r\n          step=\"2\"\r\n          value={nodeDetails[currentNode].ram}\r\n          onChange={(e) => handleNodeDetailsChange(\"ram\", Number(e.target.value))}\r\n          className=\"w-full mb-4\"\r\n        />\r\n\r\n        <label className=\"block text-sm font-medium\">CPU: {nodeDetails[currentNode].cpu} vCPUs</label>\r\n        <input\r\n          type=\"range\"\r\n          min=\"1\"\r\n          max=\"8\"\r\n          step=\"1\"\r\n          value={nodeDetails[currentNode].cpu}\r\n          onChange={(e) => handleNodeDetailsChange(\"cpu\", Number(e.target.value))}\r\n          className=\"w-full mb-4\"\r\n        />\r\n\r\n        <label className=\"block text-sm font-medium mb-2\">IP:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={nodeDetails[currentNode].ip}\r\n          onChange={(e) => handleNodeDetailsChange(\"ip\", e.target.value)}\r\n          className=\"w-full p-2 border rounded mb-4\"\r\n          placeholder={`IP address for node ${currentNode + 1}`}\r\n          required\r\n        />\r\n\r\n        <label className=\"block text-sm font-medium mb-2\">Node Description:</label>\r\n        <input\r\n          type=\"text\"\r\n          value={nodeDetails[currentNode].nodeDescription}\r\n          onChange={(e) => handleNodeDetailsChange(\"nodeDescription\", e.target.value)}\r\n          className=\"w-full p-2 border rounded mb-4\"\r\n          placeholder={`Enter node ${currentNode + 1} description`}\r\n        />\r\n\r\n        <div className=\"mb-4\">\r\n          <label className=\"inline-flex items-center\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={nodeDetails[currentNode].isNameNode}\r\n              onChange={(e) => handleNodeDetailsChange(\"isNameNode\", e.target.checked)}\r\n              className=\"form-checkbox h-5 w-5 text-teal-600\"\r\n            />\r\n            <span className=\"ml-2 text-gray-700\">Name Node</span>\r\n          </label>\r\n          <label className=\"inline-flex items-center ml-4\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={nodeDetails[currentNode].isResourceManager}\r\n              onChange={(e) => handleNodeDetailsChange(\"isResourceManager\", e.target.checked)}\r\n              className=\"form-checkbox h-5 w-5 text-teal-600\"\r\n            />\r\n            <span className=\"ml-2 text-gray-700\">Resource Manager</span>\r\n          </label>\r\n          <label className=\"inline-flex items-center ml-4\">\r\n            <input\r\n              type=\"checkbox\"\r\n              checked={nodeDetails[currentNode].isDataNode}\r\n              onChange={(e) => handleNodeDetailsChange(\"isDataNode\", e.target.checked)}\r\n              className=\"form-checkbox h-5 w-5 text-teal-600\"\r\n            />\r\n            <span className=\"ml-2 text-gray-700\">Data Node</span>\r\n          </label>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\"\r\n        >\r\n          {currentNode < nodeCount - 1 ? \"Next\" : \"Submit Cluster\"}\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}