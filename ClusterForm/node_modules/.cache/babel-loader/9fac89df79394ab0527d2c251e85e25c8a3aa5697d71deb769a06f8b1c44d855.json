{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\pfe2\\\\ClusterForm\\\\src\\\\ModeSelect.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ModeSelection = ({\n  onPrevious\n}) => {\n  _s();\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [selectedMode, setSelectedMode] = useState(\"\");\n\n  // Get the data passed from previous component\n  const {\n    hypervisor,\n    selectedOption\n  } = location.state || {};\n\n  // Verification of required data\n  useEffect(() => {\n    if (!hypervisor || !selectedOption) {\n      console.error(\"Missing required data:\", location.state);\n      navigate(\"/\", {\n        state: {\n          error: \"missing_required_data\",\n          missing: {\n            hypervisor: !hypervisor,\n            selectedOption: !selectedOption\n          }\n        },\n        replace: true\n      });\n    }\n  }, [hypervisor, selectedOption, navigate]);\n  const handleModeSelect = mode => {\n    setSelectedMode(mode);\n\n    // Prepare navigation state with all necessary data\n    const navigationState = {\n      hypervisor,\n      selectedOption,\n      mode\n    };\n\n    // Navigate based on the selected mode\n    if (mode === \"Distant mode\") {\n      navigate(\"/DistantConfigVir\", {\n        state: navigationState\n      });\n    } else if (mode === \"Local mode\") {\n      // For local mode, navigate directly to the appropriate component\n      if (selectedOption === \"Cluster\") {\n        navigate(\"/ClusterVir\", {\n          state: navigationState\n        });\n      } else if (selectedOption === \"Virtual Machine\") {\n        navigate(\"/formulaireVir\", {\n          state: navigationState\n        });\n      }\n    }\n  };\n  const handleBack = () => {\n    (onPrevious === null || onPrevious === void 0 ? void 0 : onPrevious()) || navigate(-1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-10 rounded-lg shadow-xl w-3/4 max-w-4xl\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-5xl font-bold text-teal-600 mb-10\",\n        children: \"Welcome!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-600 mb-6\",\n        children: [\"Choose a mode to create your \", selectedOption, \":\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [\"Local mode\", \"Distant mode\"].map(mode => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            id: mode.toLowerCase().replace(\" \", \"-\"),\n            name: \"mode\",\n            value: mode,\n            checked: selectedMode === mode,\n            onChange: () => handleModeSelect(mode),\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: mode.toLowerCase().replace(\" \", \"-\"),\n            className: \"text-lg cursor-pointer\",\n            children: mode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, mode, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between mt-10\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBack,\n          className: \"bg-gray-500 text-white p-2 rounded-lg shadow-md hover:bg-gray-600\",\n          children: \"Back\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(ModeSelection, \"2L1E36rwVq4zzVg02L7lmy602/s=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = ModeSelection;\nexport default ModeSelection;\nvar _c;\n$RefreshReg$(_c, \"ModeSelection\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","jsxDEV","_jsxDEV","ModeSelection","onPrevious","_s","location","navigate","selectedMode","setSelectedMode","hypervisor","selectedOption","state","console","error","missing","replace","handleModeSelect","mode","navigationState","handleBack","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","id","toLowerCase","name","value","checked","onChange","htmlFor","onClick","_c","$RefreshReg$"],"sources":["C:/Users/User/pfe2/ClusterForm/src/ModeSelect.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nconst ModeSelection = ({ onPrevious }) => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const [selectedMode, setSelectedMode] = useState(\"\");\n  \n  // Get the data passed from previous component\n  const { hypervisor, selectedOption } = location.state || {};\n\n  // Verification of required data\n  useEffect(() => {\n    if (!hypervisor || !selectedOption) {\n      console.error(\"Missing required data:\", location.state);\n      navigate(\"/\", {\n        state: {\n          error: \"missing_required_data\",\n          missing: {\n            hypervisor: !hypervisor,\n            selectedOption: !selectedOption\n          }\n        },\n        replace: true\n      });\n    }\n  }, [hypervisor, selectedOption, navigate]);\n\n  const handleModeSelect = (mode) => {\n    setSelectedMode(mode);\n    \n    // Prepare navigation state with all necessary data\n    const navigationState = {\n      hypervisor,\n      selectedOption,\n      mode\n    };\n\n    // Navigate based on the selected mode\n    if (mode === \"Distant mode\") {\n      navigate(\"/DistantConfigVir\", { state: navigationState });\n    } else if (mode === \"Local mode\") {\n      // For local mode, navigate directly to the appropriate component\n      if (selectedOption === \"Cluster\") {\n        navigate(\"/ClusterVir\", { state: navigationState });\n      } else if (selectedOption === \"Virtual Machine\") {\n        navigate(\"/formulaireVir\", { state: navigationState });\n      }\n    }\n  };\n\n  const handleBack = () => {\n    onPrevious?.() || navigate(-1);\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\">\n      <div className=\"bg-white p-10 rounded-lg shadow-xl w-3/4 max-w-4xl\">\n        <h1 className=\"text-5xl font-bold text-teal-600 mb-10\">Welcome!</h1>\n        <p className=\"text-lg text-gray-600 mb-6\">\n          Choose a mode to create your {selectedOption}:\n        </p>\n\n        <div className=\"space-y-4\">\n          {[\"Local mode\", \"Distant mode\"].map((mode) => (\n            <div key={mode} className=\"flex items-center\">\n              <input\n                type=\"radio\"\n                id={mode.toLowerCase().replace(\" \", \"-\")}\n                name=\"mode\"\n                value={mode}\n                checked={selectedMode === mode}\n                onChange={() => handleModeSelect(mode)}\n                className=\"mr-2\"\n              />\n              <label \n                htmlFor={mode.toLowerCase().replace(\" \", \"-\")} \n                className=\"text-lg cursor-pointer\"\n              >\n                {mode}\n              </label>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"flex justify-between mt-10\">\n          <button\n            onClick={handleBack}\n            className=\"bg-gray-500 text-white p-2 rounded-lg shadow-md hover:bg-gray-600\"\n          >\n            Back\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ModeSelection;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}