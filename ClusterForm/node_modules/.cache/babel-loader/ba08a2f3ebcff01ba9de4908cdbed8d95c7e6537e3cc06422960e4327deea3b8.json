{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pc msi\\\\pfe2\\\\ADHS\\\\ClusterForm\\\\src\\\\formulaireVir.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport OSVersionSelect from './OSVersionSelect'; // Assurez-vous d'importer le composant\nimport CustomBox from './CustomBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FormulaireVir() {\n  _s();\n  const [hostname, setHostname] = useState(\"\");\n  const [ram, setRam] = useState(2);\n  const [customBoxes, setCustomBoxes] = useState(() => {\n    // Récupérer les boxes personnalisées depuis localStorage\n    const savedBoxes = localStorage.getItem(\"customBoxes\");\n    return savedBoxes ? JSON.parse(savedBoxes) : []; // Si aucune box n'est trouvée, retourner un tableau vide\n  });\n  const [totalMemoryGB, setMaxRam] = useState(16);\n  const [cpu, setCpu] = useState(1);\n  const [maxCpu, setMaxCpu] = useState(8);\n  const [network, setNetwork] = useState(\"NAT\");\n  const [submitted, setSubmitted] = useState(false);\n  const [ipAddress, setIpAddress] = useState(\"\");\n  const [port, setPort] = useState(\"\");\n  const [osVersion, setOsVersion] = useState(\"ubuntu/trusty64\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isCustomBoxOpen, setIsCustomBoxOpen] = useState(false);\n  const [customRam, setCustomRam] = useState(4);\n  const [customCpu, setCustomCpu] = useState(2);\n  const [osOptions, setOsOptions] = useState(() => {\n    const savedOptions = localStorage.getItem(\"osOptions\");\n    return savedOptions ? JSON.parse(savedOptions) : [\"ubuntu/trusty64\", \"ubuntu-focal\", \"ubuntu-bionic\"];\n  });\n  const remoteConfig = location.state || {};\n  const isRemote = remoteConfig.mode === \"distant\";\n  useEffect(() => {\n    if (!isRemote) {\n      var API = process.env.REACT_APP_API_URL;\n      fetch(API + \"/get-cpu-info\").then(res => res.json()).then(data => {\n        if (data.maxCpu) setMaxCpu(data.maxCpu);\n        if (data.totalMemoryGB) setMaxRam(data.totalMemoryGB);\n        console.log(\"System info:\", data);\n      }).catch(err => console.error(\"Erreur lors de la récupération des infos système:\", err));\n    } else {\n      var API = process.env.REACT_APP_API_URL;\n      console.log(\"Mode distant\");\n      // Pour le mode distant, on appelle l'endpoint pour récupérer les infos système de la machine distante.\n      fetch(API + \"/get-remote-cpu-info\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          remote_ip: remoteConfig.remote_ip,\n          remote_user: remoteConfig.remote_user,\n          remote_password: remoteConfig.remote_password,\n          remote_os: remoteConfig.remote_os\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.maxCpu) setMaxCpu(data.maxCpu);\n        if (data.totalMemoryGB) setMaxRam(data.totalMemoryGB);\n        console.log(\"Remote system info:\", data);\n      }).catch(err => console.error(\"Erreur lors de la récupération des infos système distantes:\", err));\n    }\n  }, [isRemote]);\n  useEffect(() => {\n    const handleStorageChange = e => {\n      if (e.key === \"osOptions\") {\n        setOsOptions(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, []);\n  const handleNodeDetailsChange = (field, value) => {\n    if (field === \"osVersion\") {\n      setOsVersion(value);\n      if (value === \"Box-perso\") {\n        setIsCustomBoxOpen(true);\n      } else {\n        setIsCustomBoxOpen(false);\n      }\n    }\n  };\n  const handleAddCustomBox = ({\n    name,\n    ram,\n    cpu\n  }) => {\n    const updatedBoxes = [...customBoxes, {\n      name,\n      ram,\n      cpu\n    }];\n    const updatedOptions = [...osOptions, name];\n    setCustomBoxes(updatedBoxes);\n    setOsOptions(updatedOptions);\n\n    // Mettre à jour localStorage\n    localStorage.setItem(\"customBoxes\", JSON.stringify(updatedBoxes));\n    localStorage.setItem(\"osOptions\", JSON.stringify(updatedOptions));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!hostname.trim()) {\n      alert(\"Le champ Hostname est requis.\");\n      return;\n    }\n    const requestData = {\n      vm_name: hostname,\n      box: osVersion,\n      ram: ram,\n      cpu: cpu,\n      network: network,\n      customBoxes: customBoxes\n    };\n    if (isRemote) {\n      requestData.remote_ip = remoteConfig.remote_ip;\n      requestData.remote_password = remoteConfig.remote_password;\n      requestData.mail = remoteConfig.mail;\n      requestData.remote_user = remoteConfig.remote_user; // Transmet le login reçu depuis DistantConfig\n      requestData.remote_os = remoteConfig.remote_os;\n      requestData.hypervisor = remoteConfig.hypervisor;\n    }\n    try {\n      var API = process.env.REACT_APP_API_URL;\n      const endpoint = isRemote ? API + \"/create-vm-remote\" : API + \"/create-vm\";\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setIpAddress(data.ipAddress);\n        setPort(data.port);\n        setSubmitted(true);\n        const newMachine = {\n          hostname: hostname,\n          box: osVersion,\n          network: network,\n          ram: `${ram} GB`,\n          cpu: `${cpu} vCPUs`,\n          status: \"Running\",\n          date: new Date().toLocaleDateString(),\n          ipAddress: data.ipAddress,\n          port: data.port,\n          mode: remoteConfig.mode || \"local\"\n        };\n        const storedMachines = JSON.parse(localStorage.getItem(\"vms\")) || [];\n        const updatedMachines = [...storedMachines, newMachine];\n        localStorage.setItem(\"vms\", JSON.stringify(updatedMachines));\n        window.dispatchEvent(new Event(\"storage\"));\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/dashboardVir\"),\n        className: \"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-teal-600 mb-6\",\n      children: [\"Create a Virtual Machine (\", isRemote ? \"Distant Mode\" : \"Local Mode\", \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), !submitted ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: \"Host name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: hostname,\n        onChange: e => setHostname(e.target.value),\n        placeholder: \"Enter your host name\",\n        className: \"w-full p-2 border rounded mb-4\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(OSVersionSelect, {\n        value: osVersion,\n        onChange: value => handleNodeDetailsChange(\"osVersion\", value),\n        onCustomBoxSelect: setIsCustomBoxOpen,\n        options: osOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), isCustomBoxOpen && /*#__PURE__*/_jsxDEV(CustomBox, {\n        ram: customRam,\n        cpu: customCpu,\n        onRamChange: setCustomRam,\n        onCpuChange: setCustomCpu,\n        onClose: () => setIsCustomBoxOpen(false),\n        onAddBox: handleAddCustomBox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: [\"RAM: \", ram, \" GB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"2\",\n        max: totalMemoryGB,\n        step: \"2\",\n        value: ram,\n        onChange: e => setRam(Number(e.target.value)),\n        className: \"w-full mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: [\"CPU: \", cpu, \" vCPUs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: maxCpu // la valeur maximale récupérée du back\n        ,\n        step: \"1\",\n        value: cpu,\n        onChange: e => setCpu(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: \"Network:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: network,\n        onChange: e => setNetwork(e.target.value),\n        className: \"w-full p-2 border rounded mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"NAT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Bridged Adapter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Internal Network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Host-only Adapter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message text-center mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-teal-600\",\n        children: \"\\u2705 Machine created successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"SSH address: \", ipAddress, \":\", port]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Utilisez cette adresse pour vous connecter via SSH.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(FormulaireVir, \"i9acaiqJ3ybSu3qdgJXT8VESRa8=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = FormulaireVir;\nvar _c;\n$RefreshReg$(_c, \"FormulaireVir\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","OSVersionSelect","CustomBox","jsxDEV","_jsxDEV","FormulaireVir","_s","hostname","setHostname","ram","setRam","customBoxes","setCustomBoxes","savedBoxes","localStorage","getItem","JSON","parse","totalMemoryGB","setMaxRam","cpu","setCpu","maxCpu","setMaxCpu","network","setNetwork","submitted","setSubmitted","ipAddress","setIpAddress","port","setPort","osVersion","setOsVersion","navigate","location","isCustomBoxOpen","setIsCustomBoxOpen","customRam","setCustomRam","customCpu","setCustomCpu","osOptions","setOsOptions","savedOptions","remoteConfig","state","isRemote","mode","API","process","env","REACT_APP_API_URL","fetch","then","res","json","data","console","log","catch","err","error","method","headers","body","stringify","remote_ip","remote_user","remote_password","remote_os","handleStorageChange","e","key","newValue","window","addEventListener","removeEventListener","handleNodeDetailsChange","field","value","handleAddCustomBox","name","updatedBoxes","updatedOptions","setItem","handleSubmit","preventDefault","trim","alert","requestData","vm_name","box","mail","hypervisor","endpoint","response","ok","newMachine","status","date","Date","toLocaleDateString","storedMachines","updatedMachines","dispatchEvent","Event","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","placeholder","required","onCustomBoxSelect","options","onRamChange","onCpuChange","onClose","onAddBox","min","max","step","Number","_c","$RefreshReg$"],"sources":["C:/Users/pc msi/pfe2/ADHS/ClusterForm/src/formulaireVir.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport OSVersionSelect from './OSVersionSelect'; // Assurez-vous d'importer le composant\r\nimport CustomBox from './CustomBox'; \r\n\r\nexport default function FormulaireVir() {\r\n  const [hostname, setHostname] = useState(\"\");\r\n  const [ram, setRam] = useState(2);\r\n  const [customBoxes, setCustomBoxes] = useState(() => {\r\n    // Récupérer les boxes personnalisées depuis localStorage\r\n    const savedBoxes = localStorage.getItem(\"customBoxes\");\r\n    return savedBoxes ? JSON.parse(savedBoxes) : []; // Si aucune box n'est trouvée, retourner un tableau vide\r\n  });\r\n  const [totalMemoryGB, setMaxRam] = useState(16);\r\n  const [cpu, setCpu] = useState(1);\r\n  const [maxCpu, setMaxCpu] = useState(8);\r\n  const [network, setNetwork] = useState(\"NAT\");\r\n  const [submitted, setSubmitted] = useState(false);\r\n  const [ipAddress, setIpAddress] = useState(\"\");\r\n  const [port, setPort] = useState(\"\");\r\n  const [osVersion, setOsVersion] = useState(\"ubuntu/trusty64\");\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const [isCustomBoxOpen, setIsCustomBoxOpen] = useState(false);\r\n  const [customRam, setCustomRam] = useState(4);\r\n  const [customCpu, setCustomCpu] = useState(2);\r\n  const [osOptions, setOsOptions] = useState(() => {\r\n    const savedOptions = localStorage.getItem(\"osOptions\");\r\n    return savedOptions ? JSON.parse(savedOptions) : [\"ubuntu/trusty64\", \"ubuntu-focal\", \"ubuntu-bionic\"];\r\n  });\r\n\r\n  const remoteConfig = location.state || {};\r\n  const isRemote = remoteConfig.mode === \"distant\";\r\n\r\n  useEffect(() => {\r\n    if (!isRemote) {\r\n      var API = process.env.REACT_APP_API_URL;\r\n      fetch(API+\"/get-cpu-info\")\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.maxCpu) setMaxCpu(data.maxCpu);\r\n          if (data.totalMemoryGB) setMaxRam(data.totalMemoryGB);\r\n          console.log(\"System info:\", data);\r\n        })\r\n        .catch((err) => console.error(\"Erreur lors de la récupération des infos système:\", err));\r\n    }\r\n    else {\r\n      var API = process.env.REACT_APP_API_URL;\r\n      console.log(\"Mode distant\");\r\n      // Pour le mode distant, on appelle l'endpoint pour récupérer les infos système de la machine distante.\r\n      fetch(API+\"/get-remote-cpu-info\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n          remote_ip: remoteConfig.remote_ip,\r\n          remote_user: remoteConfig.remote_user,\r\n          remote_password: remoteConfig.remote_password,\r\n          remote_os: remoteConfig.remote_os,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.maxCpu) setMaxCpu(data.maxCpu);\r\n          if (data.totalMemoryGB) setMaxRam(data.totalMemoryGB);\r\n          console.log(\"Remote system info:\", data);\r\n        })\r\n        .catch((err) =>\r\n          console.error(\"Erreur lors de la récupération des infos système distantes:\", err)\r\n        ); }\r\n      \r\n  }, [isRemote]);\r\n\r\n\r\n  useEffect(() => {\r\n    const handleStorageChange = (e) => {\r\n      if (e.key === \"osOptions\") {\r\n        setOsOptions(JSON.parse(e.newValue));\r\n      }\r\n    };\r\n\r\n    window.addEventListener(\"storage\", handleStorageChange);\r\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\r\n  }, []);\r\n\r\n\r\n  const handleNodeDetailsChange = (field, value) => {\r\n    if (field === \"osVersion\") {\r\n      setOsVersion(value);\r\n      if (value === \"Box-perso\") {\r\n        setIsCustomBoxOpen(true);\r\n      } else {\r\n        setIsCustomBoxOpen(false);\r\n      }\r\n    }\r\n  };\r\n  const handleAddCustomBox = ({ name, ram, cpu }) => {\r\n    const updatedBoxes = [...customBoxes, { name, ram, cpu }];\r\n    const updatedOptions = [...osOptions, name];\r\n\r\n    setCustomBoxes(updatedBoxes);\r\n    setOsOptions(updatedOptions);\r\n\r\n    // Mettre à jour localStorage\r\n    localStorage.setItem(\"customBoxes\", JSON.stringify(updatedBoxes));\r\n    localStorage.setItem(\"osOptions\", JSON.stringify(updatedOptions));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!hostname.trim()) {\r\n      alert(\"Le champ Hostname est requis.\");\r\n      return;\r\n    }\r\n\r\n    const requestData = {\r\n      vm_name: hostname,\r\n      box: osVersion,\r\n      ram: ram,\r\n      cpu: cpu,\r\n      network: network,\r\n      customBoxes: customBoxes,\r\n    };\r\n\r\n    if (isRemote) {\r\n      requestData.remote_ip = remoteConfig.remote_ip;\r\n      requestData.remote_password = remoteConfig.remote_password;\r\n      requestData.mail = remoteConfig.mail; \r\n      requestData.remote_user = remoteConfig.remote_user; // Transmet le login reçu depuis DistantConfig\r\n      requestData.remote_os = remoteConfig.remote_os;\r\n      requestData.hypervisor = remoteConfig.hypervisor;\r\n    }\r\n\r\n    try {\r\n      var API = process.env.REACT_APP_API_URL;\r\n      const endpoint = isRemote\r\n        ? API+\"/create-vm-remote\"\r\n        : API+\"/create-vm\";\r\n      const response = await fetch(endpoint, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(requestData),\r\n      });\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setIpAddress(data.ipAddress);\r\n        setPort(data.port);\r\n        setSubmitted(true);\r\n\r\n        const newMachine = {\r\n          hostname: hostname,\r\n          box: osVersion,\r\n          network: network,\r\n          ram: `${ram} GB`,\r\n          cpu: `${cpu} vCPUs`,\r\n          status: \"Running\",\r\n          date: new Date().toLocaleDateString(),\r\n          ipAddress: data.ipAddress,\r\n          port: data.port,\r\n          mode: remoteConfig.mode || \"local\"\r\n        };\r\n\r\n        const storedMachines = JSON.parse(localStorage.getItem(\"vms\")) || [];\r\n        const updatedMachines = [...storedMachines, newMachine];\r\n        localStorage.setItem(\"vms\", JSON.stringify(updatedMachines));\r\n        window.dispatchEvent(new Event(\"storage\"));\r\n      } else {\r\n        alert(`❌ Erreur: ${data.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Erreur de requête:\", error);\r\n      alert(\"Erreur lors de la communication avec le serveur.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\">\r\n      <div className=\"absolute top-4 right-4\">\r\n        <button\r\n          onClick={() => navigate(\"/dashboardVir\")}\r\n          className=\"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\"\r\n        >\r\n          Dashboard\r\n        </button>\r\n      </div>\r\n      <h1 className=\"text-4xl font-bold text-teal-600 mb-6\">\r\n        Create a Virtual Machine ({isRemote ? \"Distant Mode\" : \"Local Mode\"})\r\n      </h1>\r\n      {!submitted ? (\r\n        <form onSubmit={handleSubmit} className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\r\n          <label className=\"block text-sm font-medium\">Host name:</label>\r\n          <input\r\n            type=\"text\"\r\n            value={hostname}\r\n            onChange={(e) => setHostname(e.target.value)}\r\n            placeholder=\"Enter your host name\"\r\n            className=\"w-full p-2 border rounded mb-4\"\r\n            required\r\n          />\r\n          <OSVersionSelect\r\n            value={osVersion}\r\n            onChange={(value) => handleNodeDetailsChange(\"osVersion\", value)}\r\n            onCustomBoxSelect={setIsCustomBoxOpen}\r\n            options={osOptions}\r\n          />\r\n          {isCustomBoxOpen && (\r\n            <CustomBox\r\n              ram={customRam}\r\n              cpu={customCpu}\r\n              onRamChange={setCustomRam}\r\n              onCpuChange={setCustomCpu}\r\n              onClose={() => setIsCustomBoxOpen(false)}\r\n              onAddBox={handleAddCustomBox}\r\n            />\r\n          )}\r\n\r\n        \r\n\r\n          <label className=\"block text-sm font-medium\">RAM: {ram} GB</label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"2\"\r\n            max={totalMemoryGB}\r\n            step=\"2\"\r\n            value={ram}\r\n            onChange={(e) => setRam(Number(e.target.value))}\r\n            className=\"w-full mb-4\"\r\n          />\r\n\r\n          <label className=\"block text-sm font-medium\">CPU: {cpu} vCPUs</label>\r\n          <input\r\n            type=\"range\"\r\n            min=\"1\"\r\n            max={maxCpu} // la valeur maximale récupérée du back\r\n            step=\"1\"\r\n            value={cpu}\r\n            onChange={(e) => setCpu(Number(e.target.value))}\r\n          />\r\n\r\n          <label className=\"block text-sm font-medium\">Network:</label>\r\n          <select\r\n            value={network}\r\n            onChange={(e) => setNetwork(e.target.value)}\r\n            className=\"w-full p-2 border rounded mb-4\"\r\n          >\r\n            <option>NAT</option>\r\n            <option>Bridged Adapter</option>\r\n            <option>Internal Network</option>\r\n            <option>Host-only Adapter</option>\r\n          </select>\r\n\r\n          <button type=\"submit\" className=\"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\">\r\n            Create\r\n          </button>\r\n        </form>\r\n      ) : (\r\n        <div className=\"success-message text-center mt-6\">\r\n          <h2 className=\"text-2xl font-bold text-teal-600\">✅ Machine created successfully!</h2>\r\n          <p className=\"text-lg text-gray-700\">SSH address: {ipAddress}:{port}</p>\r\n          <p className=\"text-gray-600\">Utilisez cette adresse pour vous connecter via SSH.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}