{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\formvm\\\\ClusterForm\\\\src\\\\formulaire.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport OSVersionSelect from './OSVersionSelect'; // Assurez-vous d'importer le composant\nimport CustomBox from './CustomBox';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Formulaire() {\n  _s();\n  const [hostname, setHostname] = useState(\"\");\n  const [box, setBox] = useState(\"ubuntu/trusty64\");\n  const [ram, setRam] = useState(2);\n  const [customBoxes, setCustomBoxes] = useState(() => {\n    // Récupérer les boxes personnalisées depuis localStorage\n    const savedBoxes = localStorage.getItem(\"customBoxes\");\n    return savedBoxes ? JSON.parse(savedBoxes) : []; // Si aucune box n'est trouvée, retourner un tableau vide\n  });\n  const [totalMemoryGB, setMaxRam] = useState(16);\n  const [cpu, setCpu] = useState(1);\n  const [maxCpu, setMaxCpu] = useState(8);\n  const [network, setNetwork] = useState(\"NAT\");\n  const [submitted, setSubmitted] = useState(false);\n  const [ipAddress, setIpAddress] = useState(\"\");\n  const [port, setPort] = useState(\"\");\n  const [osVersion, setOsVersion] = useState(\"ubuntu/trusty64\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isCustomBoxOpen, setIsCustomBoxOpen] = useState(false);\n  const [customRam, setCustomRam] = useState(4);\n  const [customCpu, setCustomCpu] = useState(2);\n  const [osOptions, setOsOptions] = useState(() => {\n    const savedOptions = localStorage.getItem(\"osOptions\");\n    return savedOptions ? JSON.parse(savedOptions) : [\"ubuntu/trusty64\", \"ubuntu-focal\", \"ubuntu-bionic\"];\n  });\n  const remoteConfig = location.state || {};\n  const isRemote = remoteConfig.mode === \"distant\";\n  useEffect(() => {\n    if (!isRemote) {\n      fetch(\"http://localhost:5000/get-cpu-info\").then(res => res.json()).then(data => {\n        if (data.maxCpu) setMaxCpu(data.maxCpu);\n        if (data.totalMemoryGB) setMaxRam(data.totalMemoryGB);\n        console.log(\"System info:\", data);\n      }).catch(err => console.error(\"Erreur lors de la récupération des infos système:\", err));\n    } else {\n      console.log(\"Mode distant\");\n      // Pour le mode distant, on appelle l'endpoint pour récupérer les infos système de la machine distante.\n      fetch(\"http://localhost:5000/get-remote-cpu-info\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          remote_ip: remoteConfig.remote_ip,\n          remote_user: remoteConfig.remote_user,\n          remote_password: remoteConfig.remote_password,\n          remote_os: remoteConfig.remote_os\n        })\n      }).then(res => res.json()).then(data => {\n        if (data.maxCpu) setMaxCpu(data.maxCpu);\n        if (data.totalMemoryGB) setMaxRam(data.totalMemoryGB);\n        console.log(\"Remote system info:\", data);\n      }).catch(err => console.error(\"Erreur lors de la récupération des infos système distantes:\", err));\n    }\n  }, [isRemote]);\n  useEffect(() => {\n    const handleStorageChange = e => {\n      if (e.key === \"osOptions\") {\n        setOsOptions(JSON.parse(e.newValue));\n      }\n    };\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, []);\n  const handleNodeDetailsChange = (field, value) => {\n    if (field === \"osVersion\") {\n      setOsVersion(value);\n      if (value === \"Box-perso\") {\n        setIsCustomBoxOpen(true);\n      } else {\n        setIsCustomBoxOpen(false);\n      }\n    }\n  };\n  const handleAddCustomBox = ({\n    name,\n    ram,\n    cpu\n  }) => {\n    const updatedBoxes = [...customBoxes, {\n      name,\n      ram,\n      cpu\n    }];\n    const updatedOptions = [...osOptions, name];\n    setCustomBoxes(updatedBoxes);\n    setOsOptions(updatedOptions);\n\n    // Mettre à jour localStorage\n    localStorage.setItem(\"customBoxes\", JSON.stringify(updatedBoxes));\n    localStorage.setItem(\"osOptions\", JSON.stringify(updatedOptions));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!hostname.trim()) {\n      alert(\"Le champ Hostname est requis.\");\n      return;\n    }\n    const requestData = {\n      vm_name: hostname,\n      box: osVersion,\n      ram: ram,\n      cpu: cpu,\n      network: network,\n      customBoxes: customBoxes\n    };\n    if (isRemote) {\n      requestData.remote_ip = remoteConfig.remote_ip;\n      requestData.remote_password = remoteConfig.remote_password;\n      requestData.mail = remoteConfig.mail;\n      requestData.remote_user = remoteConfig.remote_user; // Transmet le login reçu depuis DistantConfig\n      requestData.remote_os = remoteConfig.remote_os;\n      requestData.hypervisor = remoteConfig.hypervisor;\n    }\n    try {\n      const endpoint = isRemote ? \"http://localhost:5000/create-vm-remote\" : \"http://localhost:5000/create-vm\";\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setIpAddress(data.ipAddress);\n        setPort(data.port);\n        setSubmitted(true);\n        const newMachine = {\n          hostname: hostname,\n          box: osVersion,\n          network: network,\n          ram: `${ram} GB`,\n          cpu: `${cpu} vCPUs`,\n          status: \"Running\",\n          date: new Date().toLocaleDateString(),\n          ipAddress: data.ipAddress,\n          port: data.port,\n          mode: remoteConfig.mode || \"local\"\n        };\n        const storedMachines = JSON.parse(localStorage.getItem(\"vms\")) || [];\n        const updatedMachines = [...storedMachines, newMachine];\n        localStorage.setItem(\"vms\", JSON.stringify(updatedMachines));\n        window.dispatchEvent(new Event(\"storage\"));\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/dashboard\"),\n        className: \"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-teal-600 mb-6\",\n      children: [\"Create a Virtual Machine (\", isRemote ? \"Distant Mode\" : \"Local Mode\", \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), !submitted ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: \"Host name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: hostname,\n        onChange: e => setHostname(e.target.value),\n        placeholder: \"Enter your host name\",\n        className: \"w-full p-2 border rounded mb-4\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(OSVersionSelect, {\n        value: osVersion,\n        onChange: value => handleNodeDetailsChange(\"osVersion\", value),\n        onCustomBoxSelect: setIsCustomBoxOpen,\n        options: osOptions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 11\n      }, this), isCustomBoxOpen && /*#__PURE__*/_jsxDEV(CustomBox, {\n        ram: customRam,\n        cpu: customCpu,\n        onRamChange: setCustomRam,\n        onCpuChange: setCustomCpu,\n        onClose: () => setIsCustomBoxOpen(false),\n        onAddBox: handleAddCustomBox\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: \"Box:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: box,\n        onChange: e => setBox(e.target.value),\n        className: \"w-full p-2 border rounded mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"ubuntu/trusty64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"laravel/homestead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"hashicorp/precise64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"centos/7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"debian/jessie64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"hashicorp/precise32\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"scotch/box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: [\"RAM: \", ram, \" GB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"2\",\n        max: totalMemoryGB,\n        step: \"2\",\n        value: ram,\n        onChange: e => setRam(Number(e.target.value)),\n        className: \"w-full mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: [\"CPU: \", cpu, \" vCPUs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: maxCpu // la valeur maximale récupérée du back\n        ,\n        step: \"1\",\n        value: cpu,\n        onChange: e => setCpu(Number(e.target.value))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: \"Network:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: network,\n        onChange: e => setNetwork(e.target.value),\n        className: \"w-full p-2 border rounded mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"NAT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Bridged Adapter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Internal Network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Host-only Adapter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message text-center mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-teal-600\",\n        children: \"\\u2705 Machine created successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"SSH address: \", ipAddress, \":\", port]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Utilisez cette adresse pour vous connecter via SSH.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 5\n  }, this);\n}\n_s(Formulaire, \"HXimHUv/36h+fmnKEUjd0n4mXb4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = Formulaire;\nvar _c;\n$RefreshReg$(_c, \"Formulaire\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","OSVersionSelect","CustomBox","jsxDEV","_jsxDEV","Formulaire","_s","hostname","setHostname","box","setBox","ram","setRam","customBoxes","setCustomBoxes","savedBoxes","localStorage","getItem","JSON","parse","totalMemoryGB","setMaxRam","cpu","setCpu","maxCpu","setMaxCpu","network","setNetwork","submitted","setSubmitted","ipAddress","setIpAddress","port","setPort","osVersion","setOsVersion","navigate","location","isCustomBoxOpen","setIsCustomBoxOpen","customRam","setCustomRam","customCpu","setCustomCpu","osOptions","setOsOptions","savedOptions","remoteConfig","state","isRemote","mode","fetch","then","res","json","data","console","log","catch","err","error","method","headers","body","stringify","remote_ip","remote_user","remote_password","remote_os","handleStorageChange","e","key","newValue","window","addEventListener","removeEventListener","handleNodeDetailsChange","field","value","handleAddCustomBox","name","updatedBoxes","updatedOptions","setItem","handleSubmit","preventDefault","trim","alert","requestData","vm_name","mail","hypervisor","endpoint","response","ok","newMachine","status","date","Date","toLocaleDateString","storedMachines","updatedMachines","dispatchEvent","Event","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","target","placeholder","required","onCustomBoxSelect","options","onRamChange","onCpuChange","onClose","onAddBox","min","max","step","Number","_c","$RefreshReg$"],"sources":["C:/Users/User/formvm/ClusterForm/src/formulaire.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport OSVersionSelect from './OSVersionSelect'; // Assurez-vous d'importer le composant\nimport CustomBox from './CustomBox'; \n\nexport default function Formulaire() {\n  const [hostname, setHostname] = useState(\"\");\n  const [box, setBox] = useState(\"ubuntu/trusty64\");\n  const [ram, setRam] = useState(2);\n  const [customBoxes, setCustomBoxes] = useState(() => {\n    // Récupérer les boxes personnalisées depuis localStorage\n    const savedBoxes = localStorage.getItem(\"customBoxes\");\n    return savedBoxes ? JSON.parse(savedBoxes) : []; // Si aucune box n'est trouvée, retourner un tableau vide\n  });\n  const [totalMemoryGB, setMaxRam] = useState(16);\n  const [cpu, setCpu] = useState(1);\n  const [maxCpu, setMaxCpu] = useState(8);\n  const [network, setNetwork] = useState(\"NAT\");\n  const [submitted, setSubmitted] = useState(false);\n  const [ipAddress, setIpAddress] = useState(\"\");\n  const [port, setPort] = useState(\"\");\n  const [osVersion, setOsVersion] = useState(\"ubuntu/trusty64\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isCustomBoxOpen, setIsCustomBoxOpen] = useState(false);\n  const [customRam, setCustomRam] = useState(4);\n  const [customCpu, setCustomCpu] = useState(2);\n  const [osOptions, setOsOptions] = useState(() => {\n    const savedOptions = localStorage.getItem(\"osOptions\");\n    return savedOptions ? JSON.parse(savedOptions) : [\"ubuntu/trusty64\", \"ubuntu-focal\", \"ubuntu-bionic\"];\n  });\n\n  const remoteConfig = location.state || {};\n  const isRemote = remoteConfig.mode === \"distant\";\n\n  useEffect(() => {\n    if (!isRemote) {\n      fetch(\"http://localhost:5000/get-cpu-info\")\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.maxCpu) setMaxCpu(data.maxCpu);\n          if (data.totalMemoryGB) setMaxRam(data.totalMemoryGB);\n          console.log(\"System info:\", data);\n        })\n        .catch((err) => console.error(\"Erreur lors de la récupération des infos système:\", err));\n    }\n    else {\n      console.log(\"Mode distant\");\n      // Pour le mode distant, on appelle l'endpoint pour récupérer les infos système de la machine distante.\n      fetch(\"http://localhost:5000/get-remote-cpu-info\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          remote_ip: remoteConfig.remote_ip,\n          remote_user: remoteConfig.remote_user,\n          remote_password: remoteConfig.remote_password,\n          remote_os: remoteConfig.remote_os,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.maxCpu) setMaxCpu(data.maxCpu);\n          if (data.totalMemoryGB) setMaxRam(data.totalMemoryGB);\n          console.log(\"Remote system info:\", data);\n        })\n        .catch((err) =>\n          console.error(\"Erreur lors de la récupération des infos système distantes:\", err)\n        ); }\n      \n  }, [isRemote]);\n\n\n  useEffect(() => {\n    const handleStorageChange = (e) => {\n      if (e.key === \"osOptions\") {\n        setOsOptions(JSON.parse(e.newValue));\n      }\n    };\n\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, []);\n\n\n  const handleNodeDetailsChange = (field, value) => {\n    if (field === \"osVersion\") {\n      setOsVersion(value);\n      if (value === \"Box-perso\") {\n        setIsCustomBoxOpen(true);\n      } else {\n        setIsCustomBoxOpen(false);\n      }\n    }\n  };\n  const handleAddCustomBox = ({ name, ram, cpu }) => {\n    const updatedBoxes = [...customBoxes, { name, ram, cpu }];\n    const updatedOptions = [...osOptions, name];\n\n    setCustomBoxes(updatedBoxes);\n    setOsOptions(updatedOptions);\n\n    // Mettre à jour localStorage\n    localStorage.setItem(\"customBoxes\", JSON.stringify(updatedBoxes));\n    localStorage.setItem(\"osOptions\", JSON.stringify(updatedOptions));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!hostname.trim()) {\n      alert(\"Le champ Hostname est requis.\");\n      return;\n    }\n\n    const requestData = {\n      vm_name: hostname,\n      box: osVersion,\n      ram: ram,\n      cpu: cpu,\n      network: network,\n      customBoxes: customBoxes,\n    };\n\n    if (isRemote) {\n      requestData.remote_ip = remoteConfig.remote_ip;\n      requestData.remote_password = remoteConfig.remote_password;\n      requestData.mail = remoteConfig.mail; \n      requestData.remote_user = remoteConfig.remote_user; // Transmet le login reçu depuis DistantConfig\n      requestData.remote_os = remoteConfig.remote_os;\n      requestData.hypervisor = remoteConfig.hypervisor;\n    }\n\n    try {\n      const endpoint = isRemote\n        ? \"http://localhost:5000/create-vm-remote\"\n        : \"http://localhost:5000/create-vm\";\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(requestData),\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        setIpAddress(data.ipAddress);\n        setPort(data.port);\n        setSubmitted(true);\n\n        const newMachine = {\n          hostname: hostname,\n          box: osVersion,\n          network: network,\n          ram: `${ram} GB`,\n          cpu: `${cpu} vCPUs`,\n          status: \"Running\",\n          date: new Date().toLocaleDateString(),\n          ipAddress: data.ipAddress,\n          port: data.port,\n          mode: remoteConfig.mode || \"local\"\n        };\n\n        const storedMachines = JSON.parse(localStorage.getItem(\"vms\")) || [];\n        const updatedMachines = [...storedMachines, newMachine];\n        localStorage.setItem(\"vms\", JSON.stringify(updatedMachines));\n        window.dispatchEvent(new Event(\"storage\"));\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\">\n      <div className=\"absolute top-4 right-4\">\n        <button\n          onClick={() => navigate(\"/dashboard\")}\n          className=\"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\"\n        >\n          Dashboard\n        </button>\n      </div>\n      <h1 className=\"text-4xl font-bold text-teal-600 mb-6\">\n        Create a Virtual Machine ({isRemote ? \"Distant Mode\" : \"Local Mode\"})\n      </h1>\n      {!submitted ? (\n        <form onSubmit={handleSubmit} className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n          <label className=\"block text-sm font-medium\">Host name:</label>\n          <input\n            type=\"text\"\n            value={hostname}\n            onChange={(e) => setHostname(e.target.value)}\n            placeholder=\"Enter your host name\"\n            className=\"w-full p-2 border rounded mb-4\"\n            required\n          />\n          <OSVersionSelect\n            value={osVersion}\n            onChange={(value) => handleNodeDetailsChange(\"osVersion\", value)}\n            onCustomBoxSelect={setIsCustomBoxOpen}\n            options={osOptions}\n          />\n          {isCustomBoxOpen && (\n            <CustomBox\n              ram={customRam}\n              cpu={customCpu}\n              onRamChange={setCustomRam}\n              onCpuChange={setCustomCpu}\n              onClose={() => setIsCustomBoxOpen(false)}\n              onAddBox={handleAddCustomBox}\n            />\n          )}\n\n          <label className=\"block text-sm font-medium\">Box:</label>\n          <select\n            value={box}\n            onChange={(e) => setBox(e.target.value)}\n            className=\"w-full p-2 border rounded mb-4\"\n          >\n            <option>ubuntu/trusty64</option>\n            <option>laravel/homestead</option>\n            <option>hashicorp/precise64</option>\n            <option>centos/7</option>\n            <option>debian/jessie64</option>\n            <option>hashicorp/precise32</option>\n            <option>scotch/box</option>\n          </select>\n\n          <label className=\"block text-sm font-medium\">RAM: {ram} GB</label>\n          <input\n            type=\"range\"\n            min=\"2\"\n            max={totalMemoryGB}\n            step=\"2\"\n            value={ram}\n            onChange={(e) => setRam(Number(e.target.value))}\n            className=\"w-full mb-4\"\n          />\n\n          <label className=\"block text-sm font-medium\">CPU: {cpu} vCPUs</label>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max={maxCpu} // la valeur maximale récupérée du back\n            step=\"1\"\n            value={cpu}\n            onChange={(e) => setCpu(Number(e.target.value))}\n          />\n\n          <label className=\"block text-sm font-medium\">Network:</label>\n          <select\n            value={network}\n            onChange={(e) => setNetwork(e.target.value)}\n            className=\"w-full p-2 border rounded mb-4\"\n          >\n            <option>NAT</option>\n            <option>Bridged Adapter</option>\n            <option>Internal Network</option>\n            <option>Host-only Adapter</option>\n          </select>\n\n          <button type=\"submit\" className=\"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\">\n            Create\n          </button>\n        </form>\n      ) : (\n        <div className=\"success-message text-center mt-6\">\n          <h2 className=\"text-2xl font-bold text-teal-600\">✅ Machine created successfully!</h2>\n          <p className=\"text-lg text-gray-700\">SSH address: {ipAddress}:{port}</p>\n          <p className=\"text-gray-600\">Utilisez cette adresse pour vous connecter via SSH.</p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}