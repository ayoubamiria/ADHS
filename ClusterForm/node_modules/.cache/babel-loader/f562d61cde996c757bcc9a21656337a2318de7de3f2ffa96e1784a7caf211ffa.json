{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\pfe2\\\\ClusterForm\\\\src\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // Import useLocation\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faStop, faTerminal, faTrash, faTimes, faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [vms, setVms] = useState([]);\n  const [isMigrationModalOpen, setIsMigrationModalOpen] = useState(false);\n  const [selectedVm, setSelectedVm] = useState(null);\n  const [migrationData, setMigrationData] = useState({\n    proxmoxIp: '',\n    username: 'root',\n    password: ''\n  });\n  const location = useLocation(); // Use useLocation to access navigation state\n\n  useEffect(() => {\n    const storedVMs = JSON.parse(localStorage.getItem('vms')) || [];\n    setVms(storedVMs);\n  }, []);\n  useEffect(() => {\n    var _location$state;\n    const newVm = (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.newVm;\n    if (newVm) {\n      // Add the new VM to the vms state\n      setVms(prevVms => [...prevVms, newVm]);\n\n      // Update localStorage with the new VM\n      const updatedVMs = [...vms, newVm];\n      localStorage.setItem('vms', JSON.stringify(updatedVMs));\n    }\n  }, [location.state]); // Trigger this effect when navigation state changes\n\n  const handleStart = async vm => {\n    try {\n      const response = await fetch('http://localhost:5000/start_vmprox', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          proxmox_ip: vm.proxmoxIp,\n          vm_id: vm.vm_id,\n          username: 'root',\n          password: vm.password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert(`VM ${vm.hostname} démarrée avec succès : ${data.message}`);\n        const updatedVMs = vms.map(v => v.vm_id === vm.vm_id ? {\n          ...v,\n          status: 'Running'\n        } : v);\n        setVms(updatedVMs);\n        localStorage.setItem('vms', JSON.stringify(updatedVMs));\n      } else {\n        alert(`Erreur lors du démarrage de la VM : ${data.message}`);\n      }\n    } catch (error) {\n      alert(`Erreur de connexion : ${error.message}`);\n    }\n  };\n  const handleStop = async vm => {\n    try {\n      const response = await fetch('http://localhost:5000/stop_vmprox', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          proxmox_ip: vm.proxmoxIp,\n          vm_id: vm.vm_id,\n          username: 'root',\n          password: vm.password\n        })\n      });\n      const data = await response.json();\n      if (data.status === 'success') {\n        alert(`VM ${vm.hostname} arrêtée avec succès : ${data.message}`);\n        const updatedVMs = vms.map(v => v.vm_id === vm.vm_id ? {\n          ...v,\n          status: 'Stopped'\n        } : v);\n        setVms(updatedVMs);\n        localStorage.setItem('vms', JSON.stringify(updatedVMs));\n      } else {\n        alert(`Erreur lors de l'arrêt de la VM : ${data.message}`);\n      }\n    } catch (error) {\n      alert(`Erreur de connexion : ${error.message}`);\n    }\n  };\n  const handleConsole = vm => {\n    if (!vm.ipAddress || vm.ipAddress === 'N/A') {\n      alert(\"L'adresse IP de la VM n'est pas disponible.\");\n      return;\n    }\n\n    // Extraire uniquement l'adresse IP (supprimer \"inet\" si présent)\n    const ipAddress = vm.ipAddress.replace('inet ', '');\n    fetch('http://localhost:5000/open_console', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        vmIp: ipAddress,\n        // Utiliser uniquement l'adresse IP\n        username: 'molka',\n        // Utiliser le nom d'utilisateur \"molka\"\n        password: vm.password // Utiliser le mot de passe de l'utilisateur \"molka\"\n      })\n    }).then(response => response.json()).then(data => {\n      if (data.success) {\n        alert('Connexion SSH établie avec succès');\n      } else {\n        alert(`Erreur : ${data.message}`);\n      }\n    }).catch(error => {\n      alert(`Erreur de connexion : ${error.message}`);\n    });\n  };\n  const handleDelete = async vm => {\n    if (window.confirm(`Are you sure you want to delete the VM ${vm.hostname}?`)) {\n      try {\n        const response = await fetch('http://localhost:5000/delete_vmprox', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            proxmoxIp: vm.proxmoxIp,\n            vm_id: vm.vm_id,\n            username: 'root',\n            password: vm.password\n          })\n        });\n        const data = await response.json();\n        if (data.success) {\n          alert(`VM ${vm.hostname} supprimée avec succès`);\n          const updatedVMs = vms.filter(v => v.vm_id !== vm.vm_id);\n          setVms(updatedVMs);\n          localStorage.setItem('vms', JSON.stringify(updatedVMs));\n        } else {\n          alert(`Erreur lors de la suppression de la VM: ${data.message}`);\n        }\n      } catch (error) {\n        alert(`Erreur de connexion: ${error.message}`);\n      }\n    }\n  };\n  const handleMigrate = async () => {\n    if (!selectedVm) return;\n    try {\n      const response = await fetch('http://localhost:5000/migrate_vm', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          sourceProxmoxIp: selectedVm.proxmoxIp,\n          targetProxmoxIp: migrationData.proxmoxIp,\n          vm_id: selectedVm.vm_id,\n          username: migrationData.username,\n          password: migrationData.password\n        })\n      });\n      const data = await response.json();\n      if (data.success) {\n        alert(`VM ${selectedVm.hostname} migrée avec succès vers ${migrationData.proxmoxIp}`);\n        setIsMigrationModalOpen(false);\n      } else {\n        alert(`Erreur lors de la migration : ${data.message}`);\n      }\n    } catch (error) {\n      alert(`Erreur de connexion : ${error.message}`);\n    }\n  };\n  const clearLocalStorage = () => {\n    localStorage.clear();\n    alert('LocalStorage has been cleared.');\n    setVms([]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen p-4 bg-gradient-to-b from-teal-100 to-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-teal-600 mb-6\",\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: clearLocalStorage,\n      className: \"bg-red-500 text-white px-4 py-2 rounded mb-4 hover:bg-red-600\",\n      children: \"Clear LocalStorage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-white border border-gray-300\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-teal-500 text-white\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"Proxmox IP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"Node Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"Proxmox Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"Hostname\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"Network\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"IP Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"Template\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"Creation Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-2 px-4 border\",\n              children: \"Actions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: vms.map((vm, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"hover:bg-gray-100\",\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: vm.proxmoxIp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: vm.nodeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: vm.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: vm.hostname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: vm.vm_id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: vm.network\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: vm.ipAddress || 'N/A'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: vm.template\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: vm.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: vm.creationDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              className: \"py-2 px-4 border\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleStart(vm),\n                className: \"text-green-500 hover:text-green-600 mr-2\",\n                title: \"Start\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faPlay\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleStop(vm),\n                className: \"text-red-500 hover:text-red-600 mr-2\",\n                title: \"Stop\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faStop\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleConsole(vm),\n                className: \"text-blue-500 hover:text-blue-600 mr-2\",\n                title: \"Console\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTerminal\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 260,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => {\n                  setSelectedVm(vm);\n                  setIsMigrationModalOpen(true);\n                },\n                className: \"text-purple-500 hover:text-purple-600 mr-2\",\n                title: \"Migrer\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faExchangeAlt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleDelete(vm),\n                className: \"text-gray-500 hover:text-gray-600\",\n                title: \"Delete\",\n                children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faTrash\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), isMigrationModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-between items-center mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"text-xl font-bold\",\n            children: \"Migrer la VM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setIsMigrationModalOpen(false),\n            className: \"text-gray-500 hover:text-gray-700\",\n            children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTimes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Adresse IP du serveur Proxmox cible\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: migrationData.proxmoxIp,\n              onChange: e => setMigrationData({\n                ...migrationData,\n                proxmoxIp: e.target.value\n              }),\n              className: \"mt-1 block w-full border border-gray-300 rounded-md p-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Utilisateur\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: migrationData.username,\n              onChange: e => setMigrationData({\n                ...migrationData,\n                username: e.target.value\n              }),\n              className: \"mt-1 block w-full border border-gray-300 rounded-md p-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium text-gray-700\",\n              children: \"Mot de passe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              value: migrationData.password,\n              onChange: e => setMigrationData({\n                ...migrationData,\n                password: e.target.value\n              }),\n              className: \"mt-1 block w-full border border-gray-300 rounded-md p-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleMigrate,\n            className: \"w-full bg-teal-500 text-white py-2 rounded-md hover:bg-teal-600\",\n            children: \"Migrer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 298,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"7++3BQIV551VmC4VeObtR6FRew8=\", false, function () {\n  return [useLocation];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","FontAwesomeIcon","faPlay","faStop","faTerminal","faTrash","faTimes","faExchangeAlt","jsxDEV","_jsxDEV","Dashboard","_s","vms","setVms","isMigrationModalOpen","setIsMigrationModalOpen","selectedVm","setSelectedVm","migrationData","setMigrationData","proxmoxIp","username","password","location","storedVMs","JSON","parse","localStorage","getItem","_location$state","newVm","state","prevVms","updatedVMs","setItem","stringify","handleStart","vm","response","fetch","method","headers","body","proxmox_ip","vm_id","data","json","success","alert","hostname","message","map","v","status","error","handleStop","handleConsole","ipAddress","replace","vmIp","then","catch","handleDelete","window","confirm","filter","handleMigrate","sourceProxmoxIp","targetProxmoxIp","clearLocalStorage","clear","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","index","nodeName","network","template","creationDate","title","icon","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/User/pfe2/ClusterForm/src/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom'; // Import useLocation\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay, faStop, faTerminal, faTrash, faTimes, faExchangeAlt } from '@fortawesome/free-solid-svg-icons';\n\nconst Dashboard = () => {\n  const [vms, setVms] = useState([]);\n  const [isMigrationModalOpen, setIsMigrationModalOpen] = useState(false);\n  const [selectedVm, setSelectedVm] = useState(null);\n  const [migrationData, setMigrationData] = useState({\n    proxmoxIp: '',\n    username: 'root',\n    password: '',\n  });\n\n  const location = useLocation(); // Use useLocation to access navigation state\n\n  useEffect(() => {\n    const storedVMs = JSON.parse(localStorage.getItem('vms')) || [];\n    setVms(storedVMs);\n  }, []);\n\n  useEffect(() => {\n    const newVm = location.state?.newVm;\n    if (newVm) {\n      // Add the new VM to the vms state\n      setVms((prevVms) => [...prevVms, newVm]);\n\n      // Update localStorage with the new VM\n      const updatedVMs = [...vms, newVm];\n      localStorage.setItem('vms', JSON.stringify(updatedVMs));\n    }\n  }, [location.state]); // Trigger this effect when navigation state changes\n\n\n  const handleStart = async (vm) => {\n    try {\n      const response = await fetch('http://localhost:5000/start_vmprox', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          proxmox_ip: vm.proxmoxIp,\n          vm_id: vm.vm_id,\n          username: 'root',\n          password: vm.password,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        alert(`VM ${vm.hostname} démarrée avec succès : ${data.message}`);\n        const updatedVMs = vms.map((v) =>\n          v.vm_id === vm.vm_id ? { ...v, status: 'Running' } : v\n        );\n        setVms(updatedVMs);\n        localStorage.setItem('vms', JSON.stringify(updatedVMs));\n      } else {\n        alert(`Erreur lors du démarrage de la VM : ${data.message}`);\n      }\n    } catch (error) {\n      alert(`Erreur de connexion : ${error.message}`);\n    }\n  };\n\n  const handleStop = async (vm) => {\n    try {\n      const response = await fetch('http://localhost:5000/stop_vmprox', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          proxmox_ip: vm.proxmoxIp,\n          vm_id: vm.vm_id,\n          username: 'root',\n          password: vm.password,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.status === 'success') {\n        alert(`VM ${vm.hostname} arrêtée avec succès : ${data.message}`);\n        const updatedVMs = vms.map((v) =>\n          v.vm_id === vm.vm_id ? { ...v, status: 'Stopped' } : v\n        );\n        setVms(updatedVMs);\n        localStorage.setItem('vms', JSON.stringify(updatedVMs));\n      } else {\n        alert(`Erreur lors de l'arrêt de la VM : ${data.message}`);\n      }\n    } catch (error) {\n      alert(`Erreur de connexion : ${error.message}`);\n    }\n  };\n\n  const handleConsole = (vm) => {\n    if (!vm.ipAddress || vm.ipAddress === 'N/A') {\n      alert(\"L'adresse IP de la VM n'est pas disponible.\");\n      return;\n    }\n  \n    // Extraire uniquement l'adresse IP (supprimer \"inet\" si présent)\n    const ipAddress = vm.ipAddress.replace('inet ', '');\n  \n    fetch('http://localhost:5000/open_console', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        vmIp: ipAddress, // Utiliser uniquement l'adresse IP\n        username: 'molka', // Utiliser le nom d'utilisateur \"molka\"\n        password: vm.password, // Utiliser le mot de passe de l'utilisateur \"molka\"\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.success) {\n          alert('Connexion SSH établie avec succès');\n        } else {\n          alert(`Erreur : ${data.message}`);\n        }\n      })\n      .catch((error) => {\n        alert(`Erreur de connexion : ${error.message}`);\n      });\n  };\n  const handleDelete = async (vm) => {\n    if (window.confirm(`Are you sure you want to delete the VM ${vm.hostname}?`)) {\n      try {\n        const response = await fetch('http://localhost:5000/delete_vmprox', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            proxmoxIp: vm.proxmoxIp,\n            vm_id: vm.vm_id,\n            username: 'root',\n            password: vm.password,\n          }),\n        });\n\n        const data = await response.json();\n\n        if (data.success) {\n          alert(`VM ${vm.hostname} supprimée avec succès`);\n          const updatedVMs = vms.filter((v) => v.vm_id !== vm.vm_id);\n          setVms(updatedVMs);\n          localStorage.setItem('vms', JSON.stringify(updatedVMs));\n        } else {\n          alert(`Erreur lors de la suppression de la VM: ${data.message}`);\n        }\n      } catch (error) {\n        alert(`Erreur de connexion: ${error.message}`);\n      }\n    }\n  };\n\n  const handleMigrate = async () => {\n    if (!selectedVm) return;\n\n    try {\n      const response = await fetch('http://localhost:5000/migrate_vm', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n          sourceProxmoxIp: selectedVm.proxmoxIp,\n          targetProxmoxIp: migrationData.proxmoxIp,\n          vm_id: selectedVm.vm_id,\n          username: migrationData.username,\n          password: migrationData.password,\n        }),\n      });\n\n      const data = await response.json();\n\n      if (data.success) {\n        alert(`VM ${selectedVm.hostname} migrée avec succès vers ${migrationData.proxmoxIp}`);\n        setIsMigrationModalOpen(false);\n      } else {\n        alert(`Erreur lors de la migration : ${data.message}`);\n      }\n    } catch (error) {\n      alert(`Erreur de connexion : ${error.message}`);\n    }\n  };\n\n  const clearLocalStorage = () => {\n    localStorage.clear();\n    alert('LocalStorage has been cleared.');\n    setVms([]);\n  };\n\n  return (\n    <div className=\"min-h-screen p-4 bg-gradient-to-b from-teal-100 to-white\">\n      <h1 className=\"text-4xl font-bold text-teal-600 mb-6\">Dashboard</h1>\n      <button\n        onClick={clearLocalStorage}\n        className=\"bg-red-500 text-white px-4 py-2 rounded mb-4 hover:bg-red-600\"\n      >\n        Clear LocalStorage\n      </button>\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full bg-white border border-gray-300\">\n          <thead>\n            <tr className=\"bg-teal-500 text-white\">\n              <th className=\"py-2 px-4 border\">Proxmox IP</th>\n              <th className=\"py-2 px-4 border\">Node Name</th>\n              <th className=\"py-2 px-4 border\">Proxmox Password</th>\n              <th className=\"py-2 px-4 border\">Hostname</th>\n              <th className=\"py-2 px-4 border\">ID</th>\n              <th className=\"py-2 px-4 border\">Network</th>\n              <th className=\"py-2 px-4 border\">IP Address</th> {/* Nouvelle colonne */}\n              <th className=\"py-2 px-4 border\">Template</th>\n              <th className=\"py-2 px-4 border\">Status</th>\n              <th className=\"py-2 px-4 border\">Creation Date</th>\n              <th className=\"py-2 px-4 border\">Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {vms.map((vm, index) => (\n              <tr key={index} className=\"hover:bg-gray-100\">\n                <td className=\"py-2 px-4 border\">{vm.proxmoxIp}</td>\n                <td className=\"py-2 px-4 border\">{vm.nodeName}</td>\n                <td className=\"py-2 px-4 border\">{vm.password}</td>\n                <td className=\"py-2 px-4 border\">{vm.hostname}</td>\n                <td className=\"py-2 px-4 border\">{vm.vm_id}</td>\n                <td className=\"py-2 px-4 border\">{vm.network}</td>\n                <td className=\"py-2 px-4 border\">{vm.ipAddress || 'N/A'}</td> {/* Affichez l'adresse IP ici */}\n                <td className=\"py-2 px-4 border\">{vm.template}</td>\n                <td className=\"py-2 px-4 border\">{vm.status}</td>\n                <td className=\"py-2 px-4 border\">{vm.creationDate}</td>\n                <td className=\"py-2 px-4 border\">\n                  <button\n                    onClick={() => handleStart(vm)}\n                    className=\"text-green-500 hover:text-green-600 mr-2\"\n                    title=\"Start\"\n                  >\n                    <FontAwesomeIcon icon={faPlay} />\n                  </button>\n                  <button\n                    onClick={() => handleStop(vm)}\n                    className=\"text-red-500 hover:text-red-600 mr-2\"\n                    title=\"Stop\"\n                  >\n                    <FontAwesomeIcon icon={faStop} />\n                  </button>\n                  <button\n                    onClick={() => handleConsole(vm)}\n                    className=\"text-blue-500 hover:text-blue-600 mr-2\"\n                    title=\"Console\"\n                  >\n                    <FontAwesomeIcon icon={faTerminal} />\n                  </button>\n                  <button\n                    onClick={() => {\n                      setSelectedVm(vm);\n                      setIsMigrationModalOpen(true);\n                    }}\n                    className=\"text-purple-500 hover:text-purple-600 mr-2\"\n                    title=\"Migrer\"\n                  >\n                    <FontAwesomeIcon icon={faExchangeAlt} />\n                  </button>\n                  <button\n                    onClick={() => handleDelete(vm)}\n                    className=\"text-gray-500 hover:text-gray-600\"\n                    title=\"Delete\"\n                  >\n                    <FontAwesomeIcon icon={faTrash} />\n                  </button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n\n      {isMigrationModalOpen && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center\">\n          <div className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <h2 className=\"text-xl font-bold\">Migrer la VM</h2>\n              <button\n                onClick={() => setIsMigrationModalOpen(false)}\n                className=\"text-gray-500 hover:text-gray-700\"\n              >\n                <FontAwesomeIcon icon={faTimes} />\n              </button>\n            </div>\n            <div className=\"space-y-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">Adresse IP du serveur Proxmox cible</label>\n                <input\n                  type=\"text\"\n                  value={migrationData.proxmoxIp}\n                  onChange={(e) => setMigrationData({ ...migrationData, proxmoxIp: e.target.value })}\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">Utilisateur</label>\n                <input\n                  type=\"text\"\n                  value={migrationData.username}\n                  onChange={(e) => setMigrationData({ ...migrationData, username: e.target.value })}\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium text-gray-700\">Mot de passe</label>\n                <input\n                  type=\"password\"\n                  value={migrationData.password}\n                  onChange={(e) => setMigrationData({ ...migrationData, password: e.target.value })}\n                  className=\"mt-1 block w-full border border-gray-300 rounded-md p-2\"\n                />\n              </div>\n              <button\n                onClick={handleMigrate}\n                className=\"w-full bg-teal-500 text-white py-2 rounded-md hover:bg-teal-600\"\n              >\n                Migrer\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}