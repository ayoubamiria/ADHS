{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\pfe2\\\\ClusterForm\\\\src\\\\ClusterFormProx.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst RoleBadge = ({\n  role\n}) => {\n  const roleColors = {\n    namenode: \"bg-blue-100 text-blue-800\",\n    datanode: \"bg-green-100 text-green-800\",\n    resourcemanager: \"bg-purple-100 text-purple-800\",\n    ansible: \"bg-orange-100 text-orange-800\",\n    zookeeper: \"bg-yellow-100 text-yellow-800\",\n    journalnode: \"bg-pink-100 text-pink-800\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    className: `text-xs font-medium px-2.5 py-0.5 rounded-full ${roleColors[role] || 'bg-gray-100 text-gray-800'}`,\n    children: role\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = RoleBadge;\nexport default function ClusterFormProx() {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  console.log(\"ClusterType reçu :\", (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.clusterType); // Ajout ici\n  const navigate = useNavigate();\n  const {\n    clusterName,\n    nodeCount,\n    clusterType\n  } = location.state;\n  const [formData, setFormData] = useState({\n    cluster_name: clusterName,\n    node_count: nodeCount,\n    proxmox_ip: \"\",\n    password: \"\",\n    target_node: \"\",\n    network_type: \"nat\",\n    template: \"\",\n    vm_id_start: \"\",\n    vm_type: \"hadoop\",\n    roles_config: {\n      namenode: true,\n      datanode: true,\n      resourcemanager: true,\n      zookeeper: clusterType === \"HA\",\n      journalnode: clusterType === \"HA\"\n    }\n  });\n  const [isCreating, setIsCreating] = useState(false);\n  const [creationLog, setCreationLog] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [servers, setServers] = useState([]);\n  const [templates, setTemplates] = useState([]);\n  useEffect(() => {\n    const savedServers = JSON.parse(localStorage.getItem(\"servers\")) || [];\n    setServers(savedServers);\n  }, []);\n  useEffect(() => {\n    if (formData.proxmox_ip) {\n      const selectedServer = servers.find(server => server.serverIp === formData.proxmox_ip);\n      if (selectedServer) {\n        setTemplates(selectedServer.templates || []);\n      }\n    }\n  }, [formData.proxmox_ip, servers]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const addLogMessage = message => {\n    setCreationLog(prev => [...prev, `${new Date().toLocaleTimeString()}: ${message}`]);\n  };\n  const createHadoopCluster = async () => {\n    console.log(\"Type de cluster sélectionné:\", clusterType); // Debug\n    setIsCreating(true);\n    setCreationLog([]);\n    try {\n      addLogMessage(\"Initialisation de la création du cluster...\");\n\n      // Conversion des types avant envoi\n      const payload = {\n        ...formData,\n        node_count: parseInt(formData.node_count, 10),\n        vm_id_start: parseInt(formData.vm_id_start, 10),\n        hostname: `${formData.cluster_name}-node`,\n        vm_type: \"hadoop\"\n      };\n\n      // Validation côté client\n      if (isNaN(payload.node_count) || payload.node_count < 1) {\n        throw new Error(\"Nombre de nœuds invalide\");\n      }\n      if (isNaN(payload.vm_id_start) || payload.vm_id_start < 100) {\n        throw new Error(\"ID de VM doit être ≥ 100\");\n      }\n\n      // Choix du endpoint en fonction du type de cluster\n      let endpoint;\n      if (clusterType === \"Classic\") {\n        endpoint = \"http://localhost:5000/clustercreate_vmprox\";\n      } else if (clusterType === \"HA\") {\n        endpoint = \"http://localhost:5000/clusterha_vmprox\";\n      } else if (clusterType === \"Spark HA\") {\n        endpoint = \"http://localhost:5000/clusterspark_vmprox\";\n      } else {\n        throw new Error(\"Type de cluster non reconnu\");\n      }\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Erreur HTTP: ${response.status}`);\n      }\n      const result = await response.json();\n      addLogMessage(\"Cluster en cours de création...\");\n      await createHadoopNodes(); // Appelle la fonction pour créer les nœuds\n    } catch (error) {\n      addLogMessage(`ERREUR: ${error.message}`);\n    } finally {\n      setIsCreating(false);\n    }\n  };\n  const createHadoopNodes = async () => {\n    try {\n      const nodes = [];\n      let namenode_ip = null;\n      const datanode_ips = [];\n      let created = 0;\n\n      // Configuration spéciale pour Spark HA\n      const isSparkHA = clusterType === \"Spark HA\";\n      const totalNodes = isSparkHA ? formData.node_count + 2 : formData.node_count;\n\n      // Choix du endpoint\n      let endpoint;\n      if (clusterType === \"Classic\") {\n        endpoint = \"http://localhost:5000/clustercreate_vmprox\";\n      } else if (clusterType === \"HA\") {\n        endpoint = \"http://localhost:5000/clusterha_vmprox\";\n      } else if (clusterType === \"Spark HA\") {\n        endpoint = \"http://localhost:5000/clusterspark_vmprox\";\n      }\n      for (let i = 1; i <= totalNodes; i++) {\n        const vm_id = parseInt(formData.vm_id_start) + i;\n        let node_name,\n          roles = [];\n        if (isSparkHA) {\n          // Gestion spécifique des nœuds supplémentaires pour Spark HA\n          if (i === formData.node_count + 1) {\n            node_name = `ansible-${formData.cluster_name}`;\n            roles = [\"ansible\"];\n          } else if (i === formData.node_count + 2) {\n            node_name = `${formData.cluster_name}-standby`;\n            roles = [\"standby\"];\n          } else {\n            node_name = `${formData.cluster_name}-node-${i}`;\n            const isFirstNode = i === 1;\n            roles = determineNodeRoles(isFirstNode);\n          }\n        } else {\n          // Configuration standard pour Classic et HA\n          node_name = `${formData.cluster_name}-node-${i}`;\n          const isFirstNode = i === 1;\n          roles = determineNodeRoles(isFirstNode);\n        }\n        const nodeData = {\n          ...formData,\n          hostname: node_name,\n          vm_id: vm_id,\n          vm_type: \"hadoop\",\n          node_index: i,\n          roles: roles\n        };\n        addLogMessage(`Création du nœud ${node_name} (ID: ${vm_id}, Rôles: ${roles.join(\", \")})...`);\n        const createResponse = await fetchWithTimeout(endpoint, {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify(nodeData)\n        }, 30000);\n        const createData = await createResponse.json();\n        if (!createResponse.ok) {\n          addLogMessage(`Échec de la création : ${createData.error || \"Erreur inconnue\"}`);\n          continue;\n        }\n        addLogMessage(`Configuration du nœud ${node_name}...`);\n        const confResponse = await fetchWithTimeout(\"http://localhost:5000/clusterconf_vmprox\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            ...nodeData,\n            proxmox_ip: formData.proxmox_ip,\n            password: formData.password\n          })\n        }, 30000);\n        const confData = await confResponse.json();\n        if (!confResponse.ok) {\n          addLogMessage(`Échec de la configuration : ${confData.error || \"Erreur inconnue\"}`);\n          continue;\n        }\n        const node_ip = confData.ip;\n        if (roles.includes(\"namenode\")) namenode_ip = node_ip;\n        if (roles.includes(\"datanode\")) datanode_ips.push(node_ip);\n        nodes.push({\n          name: node_name,\n          ip: node_ip,\n          vm_id: vm_id,\n          roles: roles,\n          type: \"hadoop\"\n        });\n        created++;\n        addLogMessage(`Nœud ${node_name} prêt - IP: ${node_ip} - Rôles: ${roles.join(\", \")}`);\n        await new Promise(resolve => setTimeout(resolve, 15000));\n      }\n      if (created === 0) {\n        throw new Error(\"Aucun nœud n'a été créé\");\n      }\n      return {\n        success: true,\n        created,\n        nodes,\n        namenode_ip,\n        datanode_ips\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n  const determineNodeRoles = isFirstNode => {\n    const roles = [];\n    if (isFirstNode) {\n      if (formData.roles_config.namenode) roles.push(\"namenode\");\n      if (formData.roles_config.resourcemanager) roles.push(\"resourcemanager\");\n    }\n    if (formData.roles_config.datanode) roles.push(\"datanode\");\n    if ((clusterType === \"HA\" || clusterType === \"Spark HA\") && formData.roles_config.zookeeper) {\n      roles.push(\"zookeeper\");\n    }\n    if ((clusterType === \"HA\" || clusterType === \"Spark HA\") && formData.roles_config.journalnode) {\n      roles.push(\"journalnode\");\n    }\n    return roles;\n  };\n  const fetchWithTimeout = async (url, options, timeout) => {\n    const controller = new AbortController();\n    const id = setTimeout(() => controller.abort(), timeout);\n    try {\n      const response = await fetch(url, {\n        ...options,\n        signal: controller.signal\n      });\n      clearTimeout(id);\n      return response;\n    } catch (error) {\n      clearTimeout(id);\n      throw new Error(error.name === \"AbortError\" ? \"Délai d'attente dépassé\" : error.message);\n    }\n  };\n  const renderRoleConfiguration = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4 p-4 border rounded-lg bg-gray-50\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-medium text-lg mb-3\",\n      children: \"Configuration des r\\xF4les\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"R\\xF4les principaux\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: formData.roles_config.namenode,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              roles_config: {\n                ...prev.roles_config,\n                namenode: e.target.checked\n              }\n            })),\n            className: \"form-checkbox h-5 w-5 text-blue-600\",\n            disabled: clusterType !== \"HDFS\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"NameNode (Premier n\\u0153ud)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: formData.roles_config.datanode,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              roles_config: {\n                ...prev.roles_config,\n                datanode: e.target.checked\n              }\n            })),\n            className: \"form-checkbox h-5 w-5 text-green-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"DataNode (Tous les n\\u0153uds)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: formData.roles_config.resourcemanager,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              roles_config: {\n                ...prev.roles_config,\n                resourcemanager: e.target.checked\n              }\n            })),\n            className: \"form-checkbox h-5 w-5 text-purple-600\",\n            disabled: clusterType !== \"YARN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"ResourceManager (Premier n\\u0153ud)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 353,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), clusterType === \"Spark HA\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pt-2 mt-2 border-t\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium\",\n            children: \"Configuration Spark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-600\",\n            children: [\"Spark sera install\\xE9 sur le NameNode par d\\xE9faut\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 63\n            }, this), \"Spark sera install\\xE9 sur les DataNodes par d\\xE9faut\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), clusterType === \"Spark HA\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"Configuration Spark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: formData.roles_config.spark_master,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              roles_config: {\n                ...prev.roles_config,\n                spark_master: e.target.checked\n              }\n            })),\n            className: \"form-checkbox h-5 w-5 text-red-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Spark (NameNode)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: formData.roles_config.spark_worker,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              roles_config: {\n                ...prev.roles_config,\n                spark_worker: e.target.checked\n              }\n            })),\n            className: \"form-checkbox h-5 w-5 text-orange-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"Spark (DataNodes)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 397,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 11\n      }, this), clusterType === \"HA\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-medium\",\n          children: \"Haute disponibilit\\xE9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"flex items-center space-x-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: formData.roles_config.zookeeper,\n            onChange: e => setFormData(prev => ({\n              ...prev,\n              roles_config: {\n                ...prev.roles_config,\n                zookeeper: e.target.checked\n              }\n            })),\n            className: \"form-checkbox h-5 w-5 text-yellow-600\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"ZooKeeper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 297,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-teal-600 mb-6\",\n      children: [\"Configuration du cluster \", clusterType]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-full max-w-4xl bg-white rounded-lg shadow-lg p-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold text-teal-600 mb-4\",\n        children: [formData.cluster_name, \" (\", formData.node_count, \" n\\u0153uds)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 9\n      }, this), !isCreating ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          createHadoopCluster();\n        },\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-1\",\n              children: \"Serveur Proxmox*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"proxmox_ip\",\n              value: formData.proxmox_ip,\n              onChange: handleInputChange,\n              className: \"w-full p-2 border rounded\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"S\\xE9lectionner un serveur\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 19\n              }, this), servers.map((server, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: server.serverIp,\n                children: [server.serverName, \" (\", server.serverIp, \")\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-1\",\n              children: \"Mot de passe root*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              value: formData.password,\n              onChange: handleInputChange,\n              placeholder: \"Mot de passe Proxmox\",\n              className: \"w-full p-2 border rounded\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-1\",\n              children: \"N\\u0153ud cible*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"target_node\",\n              value: formData.target_node,\n              onChange: handleInputChange,\n              placeholder: \"pve ou nom du n\\u0153ud\",\n              className: \"w-full p-2 border rounded\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 471,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-1\",\n              children: \"Mod\\xE8le*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"template\",\n              value: formData.template,\n              onChange: handleInputChange,\n              className: \"w-full p-2 border rounded\",\n              required: true,\n              disabled: !formData.proxmox_ip,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"S\\xE9lectionner un mod\\xE8le\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 491,\n                columnNumber: 19\n              }, this), templates.map((template, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: template.name,\n                children: [template.name, \" (ID: \", template.id, \")\"]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 493,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-1\",\n              children: \"R\\xE9seau*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"network_type\",\n              value: formData.network_type,\n              onChange: handleInputChange,\n              className: \"w-full p-2 border rounded\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"nat\",\n                children: \"NAT\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"bridged\",\n                children: \"Pont\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"block text-sm font-medium mb-1\",\n              children: \"ID de d\\xE9marrage de la VM*\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 513,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"vm_id_start\",\n              value: formData.vm_id_start,\n              onChange: handleInputChange,\n              placeholder: \"ex. 1000\",\n              min: \"100\",\n              max: \"9999\",\n              className: \"w-full p-2 border rounded\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 514,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 512,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), renderRoleConfiguration(), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"w-full bg-teal-500 text-white p-3 rounded-lg shadow-md hover:bg-teal-600 transition duration-300 flex items-center justify-center\",\n          disabled: isCreating,\n          children: isCreating ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n              className: \"animate-spin -ml-1 mr-3 h-5 w-5 text-white\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              fill: \"none\",\n              viewBox: \"0 0 24 24\",\n              children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n                className: \"opacity-25\",\n                cx: \"12\",\n                cy: \"12\",\n                r: \"10\",\n                stroke: \"currentColor\",\n                strokeWidth: \"4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                className: \"opacity-75\",\n                fill: \"currentColor\",\n                d: \"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 537,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 535,\n              columnNumber: 19\n            }, this), \"Cr\\xE9ation du cluster en cours...\"]\n          }, void 0, true) : \"Lancer la création du cluster\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 528,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold mb-2\",\n          children: [\"Progression : \", currentStep, \"/4 \\xE9tapes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full bg-gray-200 rounded-full h-4 mb-4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-teal-500 h-4 rounded-full transition-all duration-500\",\n            style: {\n              width: `${currentStep / 4 * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-gray-100 p-4 rounded-lg max-h-96 overflow-y-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-medium mb-2\",\n            children: \"Journal d'activit\\xE9 :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 556,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"space-y-2 font-mono text-sm\",\n            children: creationLog.map((log, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"flex items-start\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"text-gray-500 mr-2\",\n                children: [log.split(':')[0], \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 560,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: log.includes(\"Rôles:\") ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [log.split(\"Rôles:\")[0].split(':').slice(1).join(':'), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"flex flex-wrap gap-1 mt-1\",\n                    children: log.split(\"Rôles:\")[1].split(\", \").map(role => /*#__PURE__*/_jsxDEV(RoleBadge, {\n                      role: role.trim()\n                    }, role.trim(), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 567,\n                      columnNumber: 31\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 565,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) : log.includes(\"IP:\") ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [log.split(\"IP:\")[0].split(':').slice(1).join(':'), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"font-bold\",\n                    children: [\"IP: \", log.split(\"IP:\")[1]]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 574,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true) : log.split(':').slice(1).join(':')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 559,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 545,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 433,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 429,\n    columnNumber: 5\n  }, this);\n}\n_s(ClusterFormProx, \"pCV2LIXl0MJkc619mnTGB38555c=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c2 = ClusterFormProx;\nvar _c, _c2;\n$RefreshReg$(_c, \"RoleBadge\");\n$RefreshReg$(_c2, \"ClusterFormProx\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","RoleBadge","role","roleColors","namenode","datanode","resourcemanager","ansible","zookeeper","journalnode","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","ClusterFormProx","_s","_location$state","location","console","log","state","clusterType","navigate","clusterName","nodeCount","formData","setFormData","cluster_name","node_count","proxmox_ip","password","target_node","network_type","template","vm_id_start","vm_type","roles_config","isCreating","setIsCreating","creationLog","setCreationLog","currentStep","setCurrentStep","servers","setServers","templates","setTemplates","savedServers","JSON","parse","localStorage","getItem","selectedServer","find","server","serverIp","handleInputChange","e","name","value","target","prev","addLogMessage","message","Date","toLocaleTimeString","createHadoopCluster","payload","parseInt","hostname","isNaN","Error","endpoint","response","fetch","method","headers","body","stringify","ok","errorData","json","error","status","result","createHadoopNodes","nodes","namenode_ip","datanode_ips","created","isSparkHA","totalNodes","i","vm_id","node_name","roles","isFirstNode","determineNodeRoles","nodeData","node_index","join","createResponse","fetchWithTimeout","createData","confResponse","confData","node_ip","ip","includes","push","type","Promise","resolve","setTimeout","success","url","options","timeout","controller","AbortController","id","abort","signal","clearTimeout","renderRoleConfiguration","checked","onChange","disabled","spark_master","spark_worker","onSubmit","preventDefault","required","map","index","serverName","placeholder","min","max","xmlns","fill","viewBox","cx","cy","r","stroke","strokeWidth","d","style","width","split","slice","trim","_c2","$RefreshReg$"],"sources":["C:/Users/User/pfe2/ClusterForm/src/ClusterFormProx.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\nconst RoleBadge = ({ role }) => {\n  const roleColors = {\n    namenode: \"bg-blue-100 text-blue-800\",\n    datanode: \"bg-green-100 text-green-800\",\n    resourcemanager: \"bg-purple-100 text-purple-800\",\n    ansible: \"bg-orange-100 text-orange-800\",\n    zookeeper: \"bg-yellow-100 text-yellow-800\",\n    journalnode: \"bg-pink-100 text-pink-800\"\n  };\n  return (\n    <span className={`text-xs font-medium px-2.5 py-0.5 rounded-full ${roleColors[role] || 'bg-gray-100 text-gray-800'}`}>\n      {role}\n    </span>\n  );\n};\n\nexport default function ClusterFormProx() {\n  const location = useLocation();\n  console.log(\"ClusterType reçu :\", location.state?.clusterType); // Ajout ici\n  const navigate = useNavigate();\n  const { clusterName, nodeCount, clusterType} = location.state;\n\n  const [formData, setFormData] = useState({\n    cluster_name: clusterName,\n    node_count: nodeCount,\n    proxmox_ip: \"\",\n    password: \"\",\n    target_node: \"\",\n    network_type: \"nat\",\n    template: \"\",\n    vm_id_start: \"\",\n    vm_type: \"hadoop\",\n    roles_config: {\n      namenode: true,\n      datanode: true,\n      resourcemanager: true,\n      zookeeper: clusterType === \"HA\",\n      journalnode: clusterType === \"HA\"\n    }\n  });\n\n  const [isCreating, setIsCreating] = useState(false);\n  const [creationLog, setCreationLog] = useState([]);\n  const [currentStep, setCurrentStep] = useState(0);\n  const [servers, setServers] = useState([]);\n  const [templates, setTemplates] = useState([]);\n\n  useEffect(() => {\n    const savedServers = JSON.parse(localStorage.getItem(\"servers\")) || [];\n    setServers(savedServers);\n  }, []);\n\n  useEffect(() => {\n    if (formData.proxmox_ip) {\n      const selectedServer = servers.find(\n        (server) => server.serverIp === formData.proxmox_ip\n      );\n      if (selectedServer) {\n        setTemplates(selectedServer.templates || []);\n      }\n    }\n  }, [formData.proxmox_ip, servers]);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData((prev) => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n\n  const addLogMessage = (message) => {\n    setCreationLog((prev) => [...prev, `${new Date().toLocaleTimeString()}: ${message}`]);\n  };\n\n  const createHadoopCluster = async () => {\n    console.log(\"Type de cluster sélectionné:\", clusterType); // Debug\n    setIsCreating(true);\n    setCreationLog([]);\n    \n    try {\n      addLogMessage(\"Initialisation de la création du cluster...\");\n      \n      // Conversion des types avant envoi\n      const payload = {\n        ...formData,\n        node_count: parseInt(formData.node_count, 10),\n        vm_id_start: parseInt(formData.vm_id_start, 10),\n        hostname: `${formData.cluster_name}-node`,\n        vm_type: \"hadoop\"\n      };\n\n      // Validation côté client\n      if (isNaN(payload.node_count) || payload.node_count < 1) {\n        throw new Error(\"Nombre de nœuds invalide\");\n      }\n\n      if (isNaN(payload.vm_id_start) || payload.vm_id_start < 100) {\n        throw new Error(\"ID de VM doit être ≥ 100\");\n      }\n\n      // Choix du endpoint en fonction du type de cluster\n      let endpoint;\n      if (clusterType === \"Classic\") {\n        endpoint = \"http://localhost:5000/clustercreate_vmprox\";\n      } else if (clusterType === \"HA\") {\n        endpoint = \"http://localhost:5000/clusterha_vmprox\";\n      } else if (clusterType === \"Spark HA\") {\n        endpoint = \"http://localhost:5000/clusterspark_vmprox\";\n      } else {\n        throw new Error(\"Type de cluster non reconnu\");\n      }\n\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(payload)\n      });\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || `Erreur HTTP: ${response.status}`);\n      }\n\n      const result = await response.json();\n      addLogMessage(\"Cluster en cours de création...\");\n      await createHadoopNodes(); // Appelle la fonction pour créer les nœuds\n    } catch (error) {\n      addLogMessage(`ERREUR: ${error.message}`);\n    } finally {\n      setIsCreating(false);\n    }\n  };\n\n  const createHadoopNodes = async () => {\n    try {\n      const nodes = [];\n      let namenode_ip = null;\n      const datanode_ips = [];\n      let created = 0;\n  \n      // Configuration spéciale pour Spark HA\n      const isSparkHA = clusterType === \"Spark HA\";\n      const totalNodes = isSparkHA ? formData.node_count + 2 : formData.node_count;\n  \n      // Choix du endpoint\n      let endpoint;\n      if (clusterType === \"Classic\") {\n        endpoint = \"http://localhost:5000/clustercreate_vmprox\";\n      } else if (clusterType === \"HA\") {\n        endpoint = \"http://localhost:5000/clusterha_vmprox\";\n      } else if (clusterType === \"Spark HA\") {\n        endpoint = \"http://localhost:5000/clusterspark_vmprox\";\n      }\n  \n      for (let i = 1; i <= totalNodes; i++) {\n        const vm_id = parseInt(formData.vm_id_start) + i;\n        let node_name, roles = [];\n  \n        if (isSparkHA) {\n          // Gestion spécifique des nœuds supplémentaires pour Spark HA\n          if (i === formData.node_count + 1) {\n            node_name = `ansible-${formData.cluster_name}`;\n            roles = [\"ansible\"];\n          } else if (i === formData.node_count + 2) {\n            node_name = `${formData.cluster_name}-standby`;\n            roles = [\"standby\"];\n          } else {\n            node_name = `${formData.cluster_name}-node-${i}`;\n            const isFirstNode = i === 1;\n            roles = determineNodeRoles(isFirstNode);\n          }\n        } else {\n          // Configuration standard pour Classic et HA\n          node_name = `${formData.cluster_name}-node-${i}`;\n          const isFirstNode = i === 1;\n          roles = determineNodeRoles(isFirstNode);\n        }\n  \n        const nodeData = {\n          ...formData,\n          hostname: node_name,\n          vm_id: vm_id,\n          vm_type: \"hadoop\",\n          node_index: i,\n          roles: roles\n        };\n  \n        addLogMessage(`Création du nœud ${node_name} (ID: ${vm_id}, Rôles: ${roles.join(\", \")})...`);\n  \n        const createResponse = await fetchWithTimeout(\n          endpoint,\n          {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify(nodeData)\n          },\n          30000\n        );\n\n        const createData = await createResponse.json();\n        if (!createResponse.ok) {\n          addLogMessage(`Échec de la création : ${createData.error || \"Erreur inconnue\"}`);\n          continue;\n        }\n\n        addLogMessage(`Configuration du nœud ${node_name}...`);\n        const confResponse = await fetchWithTimeout(\n          \"http://localhost:5000/clusterconf_vmprox\",\n          {\n            method: \"POST\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n              ...nodeData,\n              proxmox_ip: formData.proxmox_ip,\n              password: formData.password\n            })\n          },\n          30000\n        );\n\n        const confData = await confResponse.json();\n        if (!confResponse.ok) {\n          addLogMessage(`Échec de la configuration : ${confData.error || \"Erreur inconnue\"}`);\n          continue;\n        }\n\n        const node_ip = confData.ip;\n        if (roles.includes(\"namenode\")) namenode_ip = node_ip;\n        if (roles.includes(\"datanode\")) datanode_ips.push(node_ip);\n        nodes.push({\n          name: node_name,\n          ip: node_ip,\n          vm_id: vm_id,\n          roles: roles,\n          type: \"hadoop\"\n        });\n        created++;\n        addLogMessage(`Nœud ${node_name} prêt - IP: ${node_ip} - Rôles: ${roles.join(\", \")}`);\n        await new Promise(resolve => setTimeout(resolve, 15000));\n      }\n\n      if (created === 0) {\n        throw new Error(\"Aucun nœud n'a été créé\");\n      }\n      return {\n        success: true,\n        created,\n        nodes,\n        namenode_ip,\n        datanode_ips\n      };\n    } catch (error) {\n      return {\n        success: false,\n        error: error.message\n      };\n    }\n  };\n\n  const determineNodeRoles = (isFirstNode) => {\n    const roles = [];\n    if (isFirstNode) {\n      if (formData.roles_config.namenode) roles.push(\"namenode\");\n      if (formData.roles_config.resourcemanager) roles.push(\"resourcemanager\");\n    }\n    if (formData.roles_config.datanode) roles.push(\"datanode\");\n    if ((clusterType === \"HA\" || clusterType === \"Spark HA\") && formData.roles_config.zookeeper) {\n      roles.push(\"zookeeper\");\n    }\n    if ((clusterType === \"HA\" || clusterType === \"Spark HA\") && formData.roles_config.journalnode) {\n      roles.push(\"journalnode\");\n    }\n    return roles;\n  };\n\n  const fetchWithTimeout = async (url, options, timeout) => {\n    const controller = new AbortController();\n    const id = setTimeout(() => controller.abort(), timeout);\n    try {\n      const response = await fetch(url, {\n        ...options,\n        signal: controller.signal\n      });\n      clearTimeout(id);\n      return response;\n    } catch (error) {\n      clearTimeout(id);\n      throw new Error(error.name === \"AbortError\" ? \"Délai d'attente dépassé\" : error.message);\n    }\n  };\n\n  const renderRoleConfiguration = () => (\n    <div className=\"mt-4 p-4 border rounded-lg bg-gray-50\">\n      <h3 className=\"font-medium text-lg mb-3\">Configuration des rôles</h3>\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <div className=\"space-y-3\">\n          <h4 className=\"font-medium\">Rôles principaux</h4>\n          <label className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              checked={formData.roles_config.namenode}\n              onChange={(e) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  roles_config: {\n                    ...prev.roles_config,\n                    namenode: e.target.checked\n                  }\n                }))\n              }\n              className=\"form-checkbox h-5 w-5 text-blue-600\"\n              disabled={clusterType !== \"HDFS\"}\n            />\n            <span>NameNode (Premier nœud)</span>\n          </label>\n          <label className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              checked={formData.roles_config.datanode}\n              onChange={(e) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  roles_config: {\n                    ...prev.roles_config,\n                    datanode: e.target.checked\n                  }\n                }))\n              }\n              className=\"form-checkbox h-5 w-5 text-green-600\"\n            />\n            <span>DataNode (Tous les nœuds)</span>\n          </label>\n          <label className=\"flex items-center space-x-2\">\n            <input\n              type=\"checkbox\"\n              checked={formData.roles_config.resourcemanager}\n              onChange={(e) =>\n                setFormData((prev) => ({\n                  ...prev,\n                  roles_config: {\n                    ...prev.roles_config,\n                    resourcemanager: e.target.checked\n                  }\n                }))\n              }\n              className=\"form-checkbox h-5 w-5 text-purple-600\"\n              disabled={clusterType !== \"YARN\"}\n            />\n            <span>ResourceManager (Premier nœud)</span>\n          </label>\n        </div>\n        {clusterType === \"Spark HA\" && (\n          <>\n            <div className=\"pt-2 mt-2 border-t\">\n              <h4 className=\"font-medium\">Configuration Spark</h4>\n              <p className=\"text-sm text-gray-600\">\n                Spark sera installé sur le NameNode par défaut<br/>\n                Spark sera installé sur les DataNodes par défaut\n              </p>\n            </div>\n          </>\n        )}{clusterType === \"Spark HA\" && (\n          <div className=\"space-y-3\">\n            <h4 className=\"font-medium\">Configuration Spark</h4>\n            <label className=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                checked={formData.roles_config.spark_master}\n                onChange={(e) => setFormData(prev => ({\n                  ...prev,\n                  roles_config: {\n                    ...prev.roles_config,\n                    spark_master: e.target.checked\n                  }\n                }))}\n                className=\"form-checkbox h-5 w-5 text-red-600\"\n              />\n              <span>Spark (NameNode)</span>\n            </label>\n            <label className=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                checked={formData.roles_config.spark_worker}\n                onChange={(e) => setFormData(prev => ({\n                  ...prev,\n                  roles_config: {\n                    ...prev.roles_config,\n                    spark_worker: e.target.checked\n                  }\n                }))}\n                className=\"form-checkbox h-5 w-5 text-orange-600\"\n              />\n              <span>Spark (DataNodes)</span>\n            </label>\n          </div>\n        )}\n        \n        {clusterType === \"HA\" && (\n          <div className=\"space-y-3\">\n            <h4 className=\"font-medium\">Haute disponibilité</h4>\n            <label className=\"flex items-center space-x-2\">\n              <input\n                type=\"checkbox\"\n                checked={formData.roles_config.zookeeper}\n                onChange={(e) =>\n                  setFormData((prev) => ({\n                    ...prev,\n                    roles_config: {\n                      ...prev.roles_config,\n                      zookeeper: e.target.checked\n                    }\n                  }))\n                }\n                className=\"form-checkbox h-5 w-5 text-yellow-600\"\n              />\n              <span>ZooKeeper</span>\n            </label>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\">\n      <h1 className=\"text-4xl font-bold text-teal-600 mb-6\">\n        Configuration du cluster {clusterType}\n      </h1>\n      <div className=\"w-full max-w-4xl bg-white rounded-lg shadow-lg p-6\">\n        <h2 className=\"text-2xl font-semibold text-teal-600 mb-4\">\n          {formData.cluster_name} ({formData.node_count} nœuds)\n        </h2>\n        {!isCreating ? (\n          <form onSubmit={(e) => { e.preventDefault(); createHadoopCluster(); }} className=\"space-y-4\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Serveur Proxmox*</label>\n                <select\n                  name=\"proxmox_ip\"\n                  value={formData.proxmox_ip}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border rounded\"\n                  required\n                >\n                  <option value=\"\">Sélectionner un serveur</option>\n                  {servers.map((server, index) => (\n                    <option key={index} value={server.serverIp}>\n                      {server.serverName} ({server.serverIp})\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Mot de passe root*</label>\n                <input\n                  type=\"password\"\n                  name=\"password\"\n                  value={formData.password}\n                  onChange={handleInputChange}\n                  placeholder=\"Mot de passe Proxmox\"\n                  className=\"w-full p-2 border rounded\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Nœud cible*</label>\n                <input\n                  type=\"text\"\n                  name=\"target_node\"\n                  value={formData.target_node}\n                  onChange={handleInputChange}\n                  placeholder=\"pve ou nom du nœud\"\n                  className=\"w-full p-2 border rounded\"\n                  required\n                />\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Modèle*</label>\n                <select\n                  name=\"template\"\n                  value={formData.template}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border rounded\"\n                  required\n                  disabled={!formData.proxmox_ip}\n                >\n                  <option value=\"\">Sélectionner un modèle</option>\n                  {templates.map((template, index) => (\n                    <option key={index} value={template.name}>\n                      {template.name} (ID: {template.id})\n                    </option>\n                  ))}\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">Réseau*</label>\n                <select\n                  name=\"network_type\"\n                  value={formData.network_type}\n                  onChange={handleInputChange}\n                  className=\"w-full p-2 border rounded\"\n                  required\n                >\n                  <option value=\"nat\">NAT</option>\n                  <option value=\"bridged\">Pont</option>\n                </select>\n              </div>\n              <div>\n                <label className=\"block text-sm font-medium mb-1\">ID de démarrage de la VM*</label>\n                <input\n                  type=\"number\"\n                  name=\"vm_id_start\"\n                  value={formData.vm_id_start}\n                  onChange={handleInputChange}\n                  placeholder=\"ex. 1000\"\n                  min=\"100\"\n                  max=\"9999\"\n                  className=\"w-full p-2 border rounded\"\n                  required\n                />\n              </div>\n            </div>\n            {renderRoleConfiguration()}\n            <button\n              type=\"submit\"\n              className=\"w-full bg-teal-500 text-white p-3 rounded-lg shadow-md hover:bg-teal-600 transition duration-300 flex items-center justify-center\"\n              disabled={isCreating}\n            >\n              {isCreating ? (\n                <>\n                  <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                    <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                    <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                  </svg>\n                  Création du cluster en cours...\n                </>\n              ) : \"Lancer la création du cluster\"}\n            </button>\n          </form>\n        ) : (\n          <div className=\"mt-6\">\n            <h3 className=\"text-lg font-semibold mb-2\">\n              Progression : {currentStep}/4 étapes\n            </h3>\n            <div className=\"w-full bg-gray-200 rounded-full h-4 mb-4\">\n              <div\n                className=\"bg-teal-500 h-4 rounded-full transition-all duration-500\"\n                style={{ width: `${(currentStep / 4) * 100}%` }}\n              ></div>\n            </div>\n            <div className=\"bg-gray-100 p-4 rounded-lg max-h-96 overflow-y-auto\">\n              <h4 className=\"font-medium mb-2\">Journal d'activité :</h4>\n              <ul className=\"space-y-2 font-mono text-sm\">\n                {creationLog.map((log, index) => (\n                  <li key={index} className=\"flex items-start\">\n                    <span className=\"text-gray-500 mr-2\">{log.split(':')[0]}:</span>\n                    <span>\n                      {log.includes(\"Rôles:\") ? (\n                        <>\n                          {log.split(\"Rôles:\")[0].split(':').slice(1).join(':')}\n                          <div className=\"flex flex-wrap gap-1 mt-1\">\n                            {log.split(\"Rôles:\")[1].split(\", \").map(role => (\n                              <RoleBadge key={role.trim()} role={role.trim()} />\n                            ))}\n                          </div>\n                        </>\n                      ) : log.includes(\"IP:\") ? (\n                        <>\n                          {log.split(\"IP:\")[0].split(':').slice(1).join(':')}\n                          <span className=\"font-bold\">IP: {log.split(\"IP:\")[1]}</span>\n                        </>\n                      ) : (\n                        log.split(':').slice(1).join(':')\n                      )}\n                    </span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}