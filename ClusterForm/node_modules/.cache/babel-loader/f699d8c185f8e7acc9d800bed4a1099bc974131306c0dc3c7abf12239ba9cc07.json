{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{useNavigate,useLocation}from\"react-router-dom\";import OSVersionSelect from'./OSVersionSelect';// Assurez-vous d'importer le composant\nimport CustomBox from'./CustomBox';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Formulaire(){const[hostname,setHostname]=useState(\"\");const[ram,setRam]=useState(2);const[customBoxes,setCustomBoxes]=useState(()=>{// Récupérer les boxes personnalisées depuis localStorage\nconst savedBoxes=localStorage.getItem(\"customBoxes\");return savedBoxes?JSON.parse(savedBoxes):[];// Si aucune box n'est trouvée, retourner un tableau vide\n});const[totalMemoryGB,setMaxRam]=useState(16);const[cpu,setCpu]=useState(1);const[maxCpu,setMaxCpu]=useState(8);const[network,setNetwork]=useState(\"NAT\");const[submitted,setSubmitted]=useState(false);const[ipAddress,setIpAddress]=useState(\"\");const[port,setPort]=useState(\"\");const[osVersion,setOsVersion]=useState(\"ubuntu/trusty64\");const navigate=useNavigate();const location=useLocation();const[isCustomBoxOpen,setIsCustomBoxOpen]=useState(false);const[customRam,setCustomRam]=useState(4);const[customCpu,setCustomCpu]=useState(2);const[osOptions,setOsOptions]=useState(()=>{const savedOptions=localStorage.getItem(\"osOptions\");return savedOptions?JSON.parse(savedOptions):[\"ubuntu/trusty64\",\"ubuntu-focal\",\"ubuntu-bionic\"];});const remoteConfig=location.state||{};const isRemote=remoteConfig.mode===\"distant\";useEffect(()=>{if(!isRemote){var API=process.env.REACT_APP_API_URL;fetch(API+\"/get-cpu-info\").then(res=>res.json()).then(data=>{if(data.maxCpu)setMaxCpu(data.maxCpu);if(data.totalMemoryGB)setMaxRam(data.totalMemoryGB);console.log(\"System info:\",data);}).catch(err=>console.error(\"Erreur lors de la récupération des infos système:\",err));}else{var API=process.env.REACT_APP_API_URL;console.log(\"Mode distant\");// Pour le mode distant, on appelle l'endpoint pour récupérer les infos système de la machine distante.\nfetch(API+\"/get-remote-cpu-info\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({remote_ip:remoteConfig.remote_ip,remote_user:remoteConfig.remote_user,remote_password:remoteConfig.remote_password,remote_os:remoteConfig.remote_os})}).then(res=>res.json()).then(data=>{if(data.maxCpu)setMaxCpu(data.maxCpu);if(data.totalMemoryGB)setMaxRam(data.totalMemoryGB);console.log(\"Remote system info:\",data);}).catch(err=>console.error(\"Erreur lors de la récupération des infos système distantes:\",err));}},[isRemote]);useEffect(()=>{const handleStorageChange=e=>{if(e.key===\"osOptions\"){setOsOptions(JSON.parse(e.newValue));}};window.addEventListener(\"storage\",handleStorageChange);return()=>window.removeEventListener(\"storage\",handleStorageChange);},[]);const handleNodeDetailsChange=(field,value)=>{if(field===\"osVersion\"){setOsVersion(value);if(value===\"Box-perso\"){setIsCustomBoxOpen(true);}else{setIsCustomBoxOpen(false);}}};const handleAddCustomBox=_ref=>{let{name,ram,cpu}=_ref;const updatedBoxes=[...customBoxes,{name,ram,cpu}];const updatedOptions=[...osOptions,name];setCustomBoxes(updatedBoxes);setOsOptions(updatedOptions);// Mettre à jour localStorage\nlocalStorage.setItem(\"customBoxes\",JSON.stringify(updatedBoxes));localStorage.setItem(\"osOptions\",JSON.stringify(updatedOptions));};const handleSubmit=async e=>{e.preventDefault();if(!hostname.trim()){alert(\"Le champ Hostname est requis.\");return;}const requestData={vm_name:hostname,box:osVersion,ram:ram,cpu:cpu,network:network,customBoxes:customBoxes};if(isRemote){requestData.remote_ip=remoteConfig.remote_ip;requestData.remote_password=remoteConfig.remote_password;requestData.mail=remoteConfig.mail;requestData.remote_user=remoteConfig.remote_user;// Transmet le login reçu depuis DistantConfig\nrequestData.remote_os=remoteConfig.remote_os;requestData.hypervisor=remoteConfig.hypervisor;}try{var API=process.env.REACT_APP_API_URL;const endpoint=isRemote?API+\"/create-vm-remote\":API+\"/create-vm\";const response=await fetch(endpoint,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(requestData)});const data=await response.json();if(response.ok){setIpAddress(data.ipAddress);setPort(data.port);setSubmitted(true);const newMachine={hostname:hostname,box:osVersion,network:network,ram:`${ram} GB`,cpu:`${cpu} vCPUs`,status:\"Running\",date:new Date().toLocaleDateString(),ipAddress:data.ipAddress,port:data.port,mode:remoteConfig.mode||\"local\"};const storedMachines=JSON.parse(localStorage.getItem(\"vms\"))||[];const updatedMachines=[...storedMachines,newMachine];localStorage.setItem(\"vms\",JSON.stringify(updatedMachines));window.dispatchEvent(new Event(\"storage\"));}else{alert(`❌ Erreur: ${data.error}`);}}catch(error){console.error(\"Erreur de requête:\",error);alert(\"Erreur lors de la communication avec le serveur.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-4 right-4\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/dashboard\"),className:\"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\",children:\"Dashboard\"})}),/*#__PURE__*/_jsxs(\"h1\",{className:\"text-4xl font-bold text-teal-600 mb-6\",children:[\"Create a Virtual Machine (\",isRemote?\"Distant Mode\":\"Local Mode\",\")\"]}),!submitted?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"bg-white p-6 rounded-lg shadow-lg w-96\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium\",children:\"Host name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:hostname,onChange:e=>setHostname(e.target.value),placeholder:\"Enter your host name\",className:\"w-full p-2 border rounded mb-4\",required:true}),/*#__PURE__*/_jsx(OSVersionSelect,{value:osVersion,onChange:value=>handleNodeDetailsChange(\"osVersion\",value),onCustomBoxSelect:setIsCustomBoxOpen,options:osOptions}),isCustomBoxOpen&&/*#__PURE__*/_jsx(CustomBox,{ram:customRam,cpu:customCpu,onRamChange:setCustomRam,onCpuChange:setCustomCpu,onClose:()=>setIsCustomBoxOpen(false),onAddBox:handleAddCustomBox}),/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium\",children:[\"RAM: \",ram,\" GB\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"2\",max:totalMemoryGB,step:\"2\",value:ram,onChange:e=>setRam(Number(e.target.value)),className:\"w-full mb-4\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium\",children:[\"CPU: \",cpu,\" vCPUs\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"1\",max:maxCpu// la valeur maximale récupérée du back\n,step:\"1\",value:cpu,onChange:e=>setCpu(Number(e.target.value))}),/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium\",children:\"Network:\"}),/*#__PURE__*/_jsxs(\"select\",{value:network,onChange:e=>setNetwork(e.target.value),className:\"w-full p-2 border rounded mb-4\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"NAT\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Bridged Adapter\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Internal Network\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Host-only Adapter\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\",children:\"Create\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"success-message text-center mt-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-teal-600\",children:\"\\u2705 Machine created successfully!\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg text-gray-700\",children:[\"SSH address: \",ipAddress,\":\",port]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Utilisez cette adresse pour vous connecter via SSH.\"})]})]});}","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","OSVersionSelect","CustomBox","jsx","_jsx","jsxs","_jsxs","Formulaire","hostname","setHostname","ram","setRam","customBoxes","setCustomBoxes","savedBoxes","localStorage","getItem","JSON","parse","totalMemoryGB","setMaxRam","cpu","setCpu","maxCpu","setMaxCpu","network","setNetwork","submitted","setSubmitted","ipAddress","setIpAddress","port","setPort","osVersion","setOsVersion","navigate","location","isCustomBoxOpen","setIsCustomBoxOpen","customRam","setCustomRam","customCpu","setCustomCpu","osOptions","setOsOptions","savedOptions","remoteConfig","state","isRemote","mode","API","process","env","REACT_APP_API_URL","fetch","then","res","json","data","console","log","catch","err","error","method","headers","body","stringify","remote_ip","remote_user","remote_password","remote_os","handleStorageChange","e","key","newValue","window","addEventListener","removeEventListener","handleNodeDetailsChange","field","value","handleAddCustomBox","_ref","name","updatedBoxes","updatedOptions","setItem","handleSubmit","preventDefault","trim","alert","requestData","vm_name","box","mail","hypervisor","endpoint","response","ok","newMachine","status","date","Date","toLocaleDateString","storedMachines","updatedMachines","dispatchEvent","Event","className","children","onClick","onSubmit","type","onChange","target","placeholder","required","onCustomBoxSelect","options","onRamChange","onCpuChange","onClose","onAddBox","min","max","step","Number"],"sources":["C:/Users/User/pfe2/ClusterForm/src/formulaire.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport OSVersionSelect from './OSVersionSelect'; // Assurez-vous d'importer le composant\nimport CustomBox from './CustomBox'; \n\nexport default function Formulaire() {\n  const [hostname, setHostname] = useState(\"\");\n  const [ram, setRam] = useState(2);\n  const [customBoxes, setCustomBoxes] = useState(() => {\n    // Récupérer les boxes personnalisées depuis localStorage\n    const savedBoxes = localStorage.getItem(\"customBoxes\");\n    return savedBoxes ? JSON.parse(savedBoxes) : []; // Si aucune box n'est trouvée, retourner un tableau vide\n  });\n  const [totalMemoryGB, setMaxRam] = useState(16);\n  const [cpu, setCpu] = useState(1);\n  const [maxCpu, setMaxCpu] = useState(8);\n  const [network, setNetwork] = useState(\"NAT\");\n  const [submitted, setSubmitted] = useState(false);\n  const [ipAddress, setIpAddress] = useState(\"\");\n  const [port, setPort] = useState(\"\");\n  const [osVersion, setOsVersion] = useState(\"ubuntu/trusty64\");\n  const navigate = useNavigate();\n  const location = useLocation();\n  const [isCustomBoxOpen, setIsCustomBoxOpen] = useState(false);\n  const [customRam, setCustomRam] = useState(4);\n  const [customCpu, setCustomCpu] = useState(2);\n  const [osOptions, setOsOptions] = useState(() => {\n    const savedOptions = localStorage.getItem(\"osOptions\");\n    return savedOptions ? JSON.parse(savedOptions) : [\"ubuntu/trusty64\", \"ubuntu-focal\", \"ubuntu-bionic\"];\n  });\n\n  const remoteConfig = location.state || {};\n  const isRemote = remoteConfig.mode === \"distant\";\n\n  useEffect(() => {\n    if (!isRemote) {\n      var API = process.env.REACT_APP_API_URL;\n      fetch(API+\"/get-cpu-info\")\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.maxCpu) setMaxCpu(data.maxCpu);\n          if (data.totalMemoryGB) setMaxRam(data.totalMemoryGB);\n          console.log(\"System info:\", data);\n        })\n        .catch((err) => console.error(\"Erreur lors de la récupération des infos système:\", err));\n    }\n    else {\n      var API = process.env.REACT_APP_API_URL;\n      console.log(\"Mode distant\");\n      // Pour le mode distant, on appelle l'endpoint pour récupérer les infos système de la machine distante.\n      fetch(API+\"/get-remote-cpu-info\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({\n          remote_ip: remoteConfig.remote_ip,\n          remote_user: remoteConfig.remote_user,\n          remote_password: remoteConfig.remote_password,\n          remote_os: remoteConfig.remote_os,\n        }),\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          if (data.maxCpu) setMaxCpu(data.maxCpu);\n          if (data.totalMemoryGB) setMaxRam(data.totalMemoryGB);\n          console.log(\"Remote system info:\", data);\n        })\n        .catch((err) =>\n          console.error(\"Erreur lors de la récupération des infos système distantes:\", err)\n        ); }\n      \n  }, [isRemote]);\n\n\n  useEffect(() => {\n    const handleStorageChange = (e) => {\n      if (e.key === \"osOptions\") {\n        setOsOptions(JSON.parse(e.newValue));\n      }\n    };\n\n    window.addEventListener(\"storage\", handleStorageChange);\n    return () => window.removeEventListener(\"storage\", handleStorageChange);\n  }, []);\n\n\n  const handleNodeDetailsChange = (field, value) => {\n    if (field === \"osVersion\") {\n      setOsVersion(value);\n      if (value === \"Box-perso\") {\n        setIsCustomBoxOpen(true);\n      } else {\n        setIsCustomBoxOpen(false);\n      }\n    }\n  };\n  const handleAddCustomBox = ({ name, ram, cpu }) => {\n    const updatedBoxes = [...customBoxes, { name, ram, cpu }];\n    const updatedOptions = [...osOptions, name];\n\n    setCustomBoxes(updatedBoxes);\n    setOsOptions(updatedOptions);\n\n    // Mettre à jour localStorage\n    localStorage.setItem(\"customBoxes\", JSON.stringify(updatedBoxes));\n    localStorage.setItem(\"osOptions\", JSON.stringify(updatedOptions));\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!hostname.trim()) {\n      alert(\"Le champ Hostname est requis.\");\n      return;\n    }\n\n    const requestData = {\n      vm_name: hostname,\n      box: osVersion,\n      ram: ram,\n      cpu: cpu,\n      network: network,\n      customBoxes: customBoxes,\n    };\n\n    if (isRemote) {\n      requestData.remote_ip = remoteConfig.remote_ip;\n      requestData.remote_password = remoteConfig.remote_password;\n      requestData.mail = remoteConfig.mail; \n      requestData.remote_user = remoteConfig.remote_user; // Transmet le login reçu depuis DistantConfig\n      requestData.remote_os = remoteConfig.remote_os;\n      requestData.hypervisor = remoteConfig.hypervisor;\n    }\n\n    try {\n      var API = process.env.REACT_APP_API_URL;\n      const endpoint = isRemote\n        ? API+\"/create-vm-remote\"\n        : API+\"/create-vm\";\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(requestData),\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        setIpAddress(data.ipAddress);\n        setPort(data.port);\n        setSubmitted(true);\n\n        const newMachine = {\n          hostname: hostname,\n          box: osVersion,\n          network: network,\n          ram: `${ram} GB`,\n          cpu: `${cpu} vCPUs`,\n          status: \"Running\",\n          date: new Date().toLocaleDateString(),\n          ipAddress: data.ipAddress,\n          port: data.port,\n          mode: remoteConfig.mode || \"local\"\n        };\n\n        const storedMachines = JSON.parse(localStorage.getItem(\"vms\")) || [];\n        const updatedMachines = [...storedMachines, newMachine];\n        localStorage.setItem(\"vms\", JSON.stringify(updatedMachines));\n        window.dispatchEvent(new Event(\"storage\"));\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\">\n      <div className=\"absolute top-4 right-4\">\n        <button\n          onClick={() => navigate(\"/dashboard\")}\n          className=\"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\"\n        >\n          Dashboard\n        </button>\n      </div>\n      <h1 className=\"text-4xl font-bold text-teal-600 mb-6\">\n        Create a Virtual Machine ({isRemote ? \"Distant Mode\" : \"Local Mode\"})\n      </h1>\n      {!submitted ? (\n        <form onSubmit={handleSubmit} className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n          <label className=\"block text-sm font-medium\">Host name:</label>\n          <input\n            type=\"text\"\n            value={hostname}\n            onChange={(e) => setHostname(e.target.value)}\n            placeholder=\"Enter your host name\"\n            className=\"w-full p-2 border rounded mb-4\"\n            required\n          />\n          <OSVersionSelect\n            value={osVersion}\n            onChange={(value) => handleNodeDetailsChange(\"osVersion\", value)}\n            onCustomBoxSelect={setIsCustomBoxOpen}\n            options={osOptions}\n          />\n          {isCustomBoxOpen && (\n            <CustomBox\n              ram={customRam}\n              cpu={customCpu}\n              onRamChange={setCustomRam}\n              onCpuChange={setCustomCpu}\n              onClose={() => setIsCustomBoxOpen(false)}\n              onAddBox={handleAddCustomBox}\n            />\n          )}\n\n        \n\n          <label className=\"block text-sm font-medium\">RAM: {ram} GB</label>\n          <input\n            type=\"range\"\n            min=\"2\"\n            max={totalMemoryGB}\n            step=\"2\"\n            value={ram}\n            onChange={(e) => setRam(Number(e.target.value))}\n            className=\"w-full mb-4\"\n          />\n\n          <label className=\"block text-sm font-medium\">CPU: {cpu} vCPUs</label>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max={maxCpu} // la valeur maximale récupérée du back\n            step=\"1\"\n            value={cpu}\n            onChange={(e) => setCpu(Number(e.target.value))}\n          />\n\n          <label className=\"block text-sm font-medium\">Network:</label>\n          <select\n            value={network}\n            onChange={(e) => setNetwork(e.target.value)}\n            className=\"w-full p-2 border rounded mb-4\"\n          >\n            <option>NAT</option>\n            <option>Bridged Adapter</option>\n            <option>Internal Network</option>\n            <option>Host-only Adapter</option>\n          </select>\n\n          <button type=\"submit\" className=\"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\">\n            Create\n          </button>\n        </form>\n      ) : (\n        <div className=\"success-message text-center mt-6\">\n          <h2 className=\"text-2xl font-bold text-teal-600\">✅ Machine created successfully!</h2>\n          <p className=\"text-lg text-gray-700\">SSH address: {ipAddress}:{port}</p>\n          <p className=\"text-gray-600\">Utilisez cette adresse pour vous connecter via SSH.</p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}