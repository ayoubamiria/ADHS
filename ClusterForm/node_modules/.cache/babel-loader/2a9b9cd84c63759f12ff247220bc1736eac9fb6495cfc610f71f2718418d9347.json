{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\formvm\\\\ClusterForm\\\\src\\\\ClusterVir.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClusterVir = () => {\n  _s();\n  const [clusterName, setClusterName] = useState(\"\");\n  const [clusterDescription, setClusterDescription] = useState(\"tttt\");\n  const [nodeCount, setNodeCount] = useState(3);\n  const [clusterType, setClusterType] = useState({\n    Ha: false,\n    Classic: true\n  });\n  const navigate = useNavigate();\n  const handleClusterTypeChange = e => {\n    const {\n      name,\n      checked\n    } = e.target;\n    setClusterType(prev => ({\n      ...prev,\n      [name]: checked\n    }));\n    if (name === \"Ha\") {\n      setIsHaSelected(checked);\n    }\n  };\n  const [isHaSelected, setIsHaSelected] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const clusterData = {\n      clusterName,\n      clusterDescription,\n      nodeCount,\n      clusterType,\n      isHaSelected,\n      nodeDetails: [] // À compléter dans l'étape suivante\n    };\n    try {\n      const response = await fetch(\"/create_cluster\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(clusterData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Rediriger vers le tableau de bord après la création du cluster\n        navigate(\"/ClusterDashVir\", {\n          state: data\n        });\n      } else {\n        console.error(\"Error creating cluster:\", data.error);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const handleDashboardClick = () => {\n    navigate(\"/ClusterDashVir\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDashboardClick,\n        className: \"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-teal-600 mb-6\",\n      children: \"Create a Cluster\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium mb-2\",\n        children: \"Cluster Name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: clusterName,\n        onChange: e => setClusterName(e.target.value),\n        placeholder: \"Enter cluster name\",\n        className: \"w-full p-2 border rounded mb-4\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium mb-2\",\n        children: \"Cluster Description:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: clusterDescription,\n        onChange: e => setClusterDescription(e.target.value),\n        placeholder: \"Enter cluster description\",\n        className: \"w-full p-2 border rounded mb-4\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium mb-2\",\n        children: [\"Number of Nodes: \", nodeCount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"10\",\n        value: nodeCount,\n        onChange: e => setNodeCount(e.target.value),\n        className: \"w-full mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium mb-2\",\n        children: \"Cluster Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"mr-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"Ha\",\n            checked: clusterType.Ha,\n            onChange: handleClusterTypeChange,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), \"High Availability (HA)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            name: \"Classic\",\n            checked: clusterType.Classic,\n            onChange: handleClusterTypeChange,\n            className: \"mr-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), \"Classic\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\",\n        children: \"Create Cluster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(ClusterVir, \"8GQGOqe+BZeHJ+gCjaYehCUtSrA=\", false, function () {\n  return [useNavigate];\n});\n_c = ClusterVir;\nexport default ClusterVir;\nvar _c;\n$RefreshReg$(_c, \"ClusterVir\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","ClusterVir","_s","clusterName","setClusterName","clusterDescription","setClusterDescription","nodeCount","setNodeCount","clusterType","setClusterType","Ha","Classic","navigate","handleClusterTypeChange","e","name","checked","target","prev","setIsHaSelected","isHaSelected","handleSubmit","preventDefault","clusterData","nodeDetails","response","fetch","method","headers","body","JSON","stringify","data","json","ok","state","console","error","handleDashboardClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","placeholder","required","min","max","_c","$RefreshReg$"],"sources":["C:/Users/User/formvm/ClusterForm/src/ClusterVir.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst ClusterVir = () => {\n  const [clusterName, setClusterName] = useState(\"\");\n  const [clusterDescription, setClusterDescription] = useState(\"tttt\");\n  const [nodeCount, setNodeCount] = useState(3);\n  const [clusterType, setClusterType] = useState({\n    Ha: false,\n    Classic: true,\n  });\n\n  const navigate = useNavigate();\n\n  const handleClusterTypeChange = (e) => {\n    const { name, checked } = e.target;\n    setClusterType((prev) => ({\n      ...prev,\n      [name]: checked,\n    }));\n    if (name === \"Ha\") {\n      setIsHaSelected(checked);\n    }\n  };\n\n  const [isHaSelected, setIsHaSelected] = useState(false);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const clusterData = {\n      clusterName,\n      clusterDescription,\n      nodeCount,\n      clusterType,\n      isHaSelected,\n      nodeDetails: [], // À compléter dans l'étape suivante\n    };\n\n    try {\n      const response = await fetch(\"/create_cluster\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify(clusterData),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        // Rediriger vers le tableau de bord après la création du cluster\n        navigate(\"/ClusterDashVir\", { state: data });\n      } else {\n        console.error(\"Error creating cluster:\", data.error);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  const handleDashboardClick = () => {\n    navigate(\"/ClusterDashVir\");\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\">\n      <div className=\"absolute top-4 right-4\">\n        <button\n          onClick={handleDashboardClick}\n          className=\"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\"\n        >\n          Dashboard\n        </button>\n      </div>\n\n      <h1 className=\"text-4xl font-bold text-teal-600 mb-6\">Create a Cluster</h1>\n      <form onSubmit={handleSubmit} className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n        {/* Cluster Name */}\n        <label className=\"block text-sm font-medium mb-2\">Cluster Name:</label>\n        <input\n          type=\"text\"\n          value={clusterName}\n          onChange={(e) => setClusterName(e.target.value)}\n          placeholder=\"Enter cluster name\"\n          className=\"w-full p-2 border rounded mb-4\"\n          required\n        />\n\n        {/* Cluster Description */}\n        <label className=\"block text-sm font-medium mb-2\">Cluster Description:</label>\n        <input\n          type=\"text\"\n          value={clusterDescription}\n          onChange={(e) => setClusterDescription(e.target.value)}\n          placeholder=\"Enter cluster description\"\n          className=\"w-full p-2 border rounded mb-4\"\n          required\n        />\n\n        {/* Number of Nodes */}\n        <label className=\"block text-sm font-medium mb-2\">Number of Nodes: {nodeCount}</label>\n        <input\n          type=\"range\"\n          min=\"1\"\n          max=\"10\"\n          value={nodeCount}\n          onChange={(e) => setNodeCount(e.target.value)}\n          className=\"w-full mb-4\"\n        />\n\n        {/* Cluster Type: HA or Classic */}\n        <label className=\"block text-sm font-medium mb-2\">Cluster Type:</label>\n        <div className=\"flex items-center mb-4\">\n          <label className=\"mr-4\">\n            <input\n              type=\"checkbox\"\n              name=\"Ha\"\n              checked={clusterType.Ha}\n              onChange={handleClusterTypeChange}\n              className=\"mr-2\"\n            />\n            High Availability (HA)\n          </label>\n          <label>\n            <input\n              type=\"checkbox\"\n              name=\"Classic\"\n              checked={clusterType.Classic}\n              onChange={handleClusterTypeChange}\n              className=\"mr-2\"\n            />\n            Classic\n          </label>\n        </div>\n\n        {/* Submit Button */}\n        <button\n          type=\"submit\"\n          className=\"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\"\n        >\n          Create Cluster\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default ClusterVir;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}