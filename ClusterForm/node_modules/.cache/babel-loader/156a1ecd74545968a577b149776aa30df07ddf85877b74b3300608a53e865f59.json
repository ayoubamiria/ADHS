{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\formvm\\\\ClusterForm\\\\src\\\\formulaire.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Formulaire() {\n  _s();\n  const [hostname, setHostname] = useState(\"\");\n  const [box, setBox] = useState(\"ubuntu/trusty64\");\n  const [ram, setRam] = useState(2);\n  const [cpu, setCpu] = useState(1);\n  const [network, setNetwork] = useState(\"NAT\");\n  const [submitted, setSubmitted] = useState(false);\n  const [ipAddress, setIpAddress] = useState(\"\");\n  const [port, setPort] = useState(\"\");\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!hostname.trim()) {\n      alert(\"Le champ Hostname est requis.\");\n      return;\n    }\n    const requestData = {\n      vm_name: hostname,\n      box: box,\n      ram: ram,\n      cpu: cpu,\n      network: network\n    };\n    try {\n      const response = await fetch(\"http://localhost:5000/create-vm\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(requestData)\n      });\n      const data = await response.json();\n      if (response.ok) {\n        // Récupère l'IP et le port réels renvoyés par le backend\n        setIpAddress(data.ipAddress);\n        setPort(data.port);\n        setSubmitted(true);\n\n        // Créer l'objet machine avec les infos complètes\n        const newMachine = {\n          hostname: hostname,\n          box: box,\n          network: network,\n          ram: `${ram} GB`,\n          cpu: `${cpu} vCPUs`,\n          status: \"Running\",\n          date: new Date().toLocaleDateString(),\n          ipAddress: data.ipAddress,\n          port: data.port\n        };\n\n        // Sauvegarde dans le localStorage\n        const storedMachines = JSON.parse(localStorage.getItem(\"vms\")) || [];\n        const updatedMachines = [...storedMachines, newMachine];\n        localStorage.setItem(\"vms\", JSON.stringify(updatedMachines));\n\n        // Notifier d'un changement (pour que le Dashboard se mette à jour)\n        window.dispatchEvent(new Event(\"storage\"));\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute top-4 right-4\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => navigate(\"/dashboard\"),\n        className: \"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\",\n        children: \"Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold text-teal-600 mb-6\",\n      children: \"Create a Virtual Machine\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), !submitted ? /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"bg-white p-6 rounded-lg shadow-lg w-96\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: \"Host name:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: hostname,\n        onChange: e => setHostname(e.target.value),\n        placeholder: \"Enter your host name\",\n        className: \"w-full p-2 border rounded mb-4\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: \"Box:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: box,\n        onChange: e => setBox(e.target.value),\n        className: \"w-full p-2 border rounded mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"ubuntu/trusty64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"laravel/homestead\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"hashicorp/precise64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"centos/7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"debian/jessie64\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"hashicorp/precise32\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"scotch/box\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: [\"RAM: \", ram, \" GB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"2\",\n        max: \"16\",\n        step: \"2\",\n        value: ram,\n        onChange: e => setRam(Number(e.target.value)),\n        className: \"w-full mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: [\"CPU: \", cpu, \" vCPUs\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\",\n        min: \"1\",\n        max: \"8\",\n        step: \"1\",\n        value: cpu,\n        onChange: e => setCpu(Number(e.target.value)),\n        className: \"w-full mb-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block text-sm font-medium\",\n        children: \"Network:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: network,\n        onChange: e => setNetwork(e.target.value),\n        className: \"w-full p-2 border rounded mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"NAT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Bridged Adapter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Internal Network\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Host-only Adapter\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\",\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"success-message text-center mt-6\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-bold text-teal-600\",\n        children: \"\\u2705 Machine created successfully!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-lg text-gray-700\",\n        children: [\"SSH address: \", ipAddress, \":\", port]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: \"Utilisez cette adresse pour vous connecter via SSH.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(Formulaire, \"iOnEqtmJJ6Yhujhas2FshPKB6JQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Formulaire;\nvar _c;\n$RefreshReg$(_c, \"Formulaire\");","map":{"version":3,"names":["useState","useNavigate","useLocation","jsxDEV","_jsxDEV","Formulaire","_s","hostname","setHostname","box","setBox","ram","setRam","cpu","setCpu","network","setNetwork","submitted","setSubmitted","ipAddress","setIpAddress","port","setPort","navigate","handleSubmit","e","preventDefault","trim","alert","requestData","vm_name","response","fetch","method","headers","body","JSON","stringify","data","json","ok","newMachine","status","date","Date","toLocaleDateString","storedMachines","parse","localStorage","getItem","updatedMachines","setItem","window","dispatchEvent","Event","error","console","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","min","max","step","Number","_c","$RefreshReg$"],"sources":["C:/Users/User/formvm/ClusterForm/src/formulaire.js"],"sourcesContent":["import { useState } from \"react\";\nimport { useNavigate ,useLocation} from \"react-router-dom\";\n\nexport default function Formulaire() {\n  const [hostname, setHostname] = useState(\"\");\n  const [box, setBox] = useState(\"ubuntu/trusty64\");\n  const [ram, setRam] = useState(2);\n  const [cpu, setCpu] = useState(1);\n  const [network, setNetwork] = useState(\"NAT\");\n  const [submitted, setSubmitted] = useState(false);\n  const [ipAddress, setIpAddress] = useState(\"\");\n  const [port, setPort] = useState(\"\");\n\n\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!hostname.trim()) {\n      alert(\"Le champ Hostname est requis.\");\n      return;\n    }\n\n    const requestData = {\n      vm_name: hostname,\n      box: box,\n      ram: ram,\n      cpu: cpu,\n      network: network\n    };\n\n    try {\n      const response = await fetch(\"http://localhost:5000/create-vm\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(requestData),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        // Récupère l'IP et le port réels renvoyés par le backend\n        setIpAddress(data.ipAddress);\n        setPort(data.port);\n        setSubmitted(true);\n\n        // Créer l'objet machine avec les infos complètes\n        const newMachine = {\n          hostname: hostname,\n          box: box,\n          network: network,\n          ram: `${ram} GB`,\n          cpu: `${cpu} vCPUs`,\n          status: \"Running\",\n          date: new Date().toLocaleDateString(),\n          ipAddress: data.ipAddress,\n          port: data.port\n        };\n\n        // Sauvegarde dans le localStorage\n        const storedMachines = JSON.parse(localStorage.getItem(\"vms\")) || [];\n        const updatedMachines = [...storedMachines, newMachine];\n        localStorage.setItem(\"vms\", JSON.stringify(updatedMachines));\n\n        // Notifier d'un changement (pour que le Dashboard se mette à jour)\n        window.dispatchEvent(new Event(\"storage\"));\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\">\n      <div className=\"absolute top-4 right-4\">\n        <button\n          onClick={() => navigate(\"/dashboard\")}\n          className=\"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\"\n        >\n          Dashboard\n        </button>\n      </div>\n      <h1 className=\"text-4xl font-bold text-teal-600 mb-6\">Create a Virtual Machine</h1>\n      {!submitted ? (\n        <form onSubmit={handleSubmit} className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n          <label className=\"block text-sm font-medium\">Host name:</label>\n          <input\n            type=\"text\"\n            value={hostname}\n            onChange={(e) => setHostname(e.target.value)}\n            placeholder=\"Enter your host name\"\n            className=\"w-full p-2 border rounded mb-4\"\n            required\n          />\n\n          <label className=\"block text-sm font-medium\">Box:</label>\n          <select\n            value={box}\n            onChange={(e) => setBox(e.target.value)}\n            className=\"w-full p-2 border rounded mb-4\"\n          >\n            <option>ubuntu/trusty64</option>\n            <option>laravel/homestead</option>\n            <option>hashicorp/precise64</option>\n            <option>centos/7</option>\n            <option>debian/jessie64</option>\n            <option>hashicorp/precise32</option>\n            <option>scotch/box</option>\n          </select>\n\n          <label className=\"block text-sm font-medium\">RAM: {ram} GB</label>\n          <input\n            type=\"range\"\n            min=\"2\"\n            max=\"16\"\n            step=\"2\"\n            value={ram}\n            onChange={(e) => setRam(Number(e.target.value))}\n            className=\"w-full mb-4\"\n          />\n\n          <label className=\"block text-sm font-medium\">CPU: {cpu} vCPUs</label>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"8\"\n            step=\"1\"\n            value={cpu}\n            onChange={(e) => setCpu(Number(e.target.value))}\n            className=\"w-full mb-4\"\n          />\n\n          <label className=\"block text-sm font-medium\">Network:</label>\n          <select\n            value={network}\n            onChange={(e) => setNetwork(e.target.value)}\n            className=\"w-full p-2 border rounded mb-4\"\n          >\n            <option>NAT</option>\n            <option>Bridged Adapter</option>\n            <option>Internal Network</option>\n            <option>Host-only Adapter</option>\n          </select>\n\n          <button type=\"submit\" className=\"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\">\n            Create\n          </button>\n        </form>\n      ) : (\n        <div className=\"success-message text-center mt-6\">\n          <h2 className=\"text-2xl font-bold text-teal-600\">✅ Machine created successfully!</h2>\n          <p className=\"text-lg text-gray-700\">SSH address: {ipAddress}:{port}</p>\n          <p className=\"text-gray-600\">Utilisez cette adresse pour vous connecter via SSH.</p>\n        </div>\n      )}\n    </div>\n  );\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACS,GAAG,EAAEC,MAAM,CAAC,GAAGV,QAAQ,CAAC,iBAAiB,CAAC;EACjD,MAAM,CAACW,GAAG,EAAEC,MAAM,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACiB,SAAS,EAAEC,YAAY,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqB,IAAI,EAAEC,OAAO,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAGpC,MAAMuB,QAAQ,GAAGtB,WAAW,CAAC,CAAC;EAE9B,MAAMuB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACnB,QAAQ,CAACoB,IAAI,CAAC,CAAC,EAAE;MACpBC,KAAK,CAAC,+BAA+B,CAAC;MACtC;IACF;IAEA,MAAMC,WAAW,GAAG;MAClBC,OAAO,EAAEvB,QAAQ;MACjBE,GAAG,EAAEA,GAAG;MACRE,GAAG,EAAEA,GAAG;MACRE,GAAG,EAAEA,GAAG;MACRE,OAAO,EAAEA;IACX,CAAC;IAED,IAAI;MACF,MAAMgB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,WAAW;MAClC,CAAC,CAAC;MAEF,MAAMS,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MAElC,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACf;QACApB,YAAY,CAACkB,IAAI,CAACnB,SAAS,CAAC;QAC5BG,OAAO,CAACgB,IAAI,CAACjB,IAAI,CAAC;QAClBH,YAAY,CAAC,IAAI,CAAC;;QAElB;QACA,MAAMuB,UAAU,GAAG;UACjBlC,QAAQ,EAAEA,QAAQ;UAClBE,GAAG,EAAEA,GAAG;UACRM,OAAO,EAAEA,OAAO;UAChBJ,GAAG,EAAE,GAAGA,GAAG,KAAK;UAChBE,GAAG,EAAE,GAAGA,GAAG,QAAQ;UACnB6B,MAAM,EAAE,SAAS;UACjBC,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,kBAAkB,CAAC,CAAC;UACrC1B,SAAS,EAAEmB,IAAI,CAACnB,SAAS;UACzBE,IAAI,EAAEiB,IAAI,CAACjB;QACb,CAAC;;QAED;QACA,MAAMyB,cAAc,GAAGV,IAAI,CAACW,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE;QACpE,MAAMC,eAAe,GAAG,CAAC,GAAGJ,cAAc,EAAEL,UAAU,CAAC;QACvDO,YAAY,CAACG,OAAO,CAAC,KAAK,EAAEf,IAAI,CAACC,SAAS,CAACa,eAAe,CAAC,CAAC;;QAE5D;QACAE,MAAM,CAACC,aAAa,CAAC,IAAIC,KAAK,CAAC,SAAS,CAAC,CAAC;MAC5C,CAAC,MAAM;QACL1B,KAAK,CAAC,aAAaU,IAAI,CAACiB,KAAK,EAAE,CAAC;MAClC;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;MAC1C3B,KAAK,CAAC,kDAAkD,CAAC;IAC3D;EACF,CAAC;EAED,oBACExB,OAAA;IAAKqD,SAAS,EAAC,oGAAoG;IAAAC,QAAA,gBACjHtD,OAAA;MAAKqD,SAAS,EAAC,wBAAwB;MAAAC,QAAA,eACrCtD,OAAA;QACEuD,OAAO,EAAEA,CAAA,KAAMpC,QAAQ,CAAC,YAAY,CAAE;QACtCkC,SAAS,EAAC,yEAAyE;QAAAC,QAAA,EACpF;MAED;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACN3D,OAAA;MAAIqD,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAwB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClF,CAAC9C,SAAS,gBACTb,OAAA;MAAM4D,QAAQ,EAAExC,YAAa;MAACiC,SAAS,EAAC,wCAAwC;MAAAC,QAAA,gBAC9EtD,OAAA;QAAOqD,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC/D3D,OAAA;QACE6D,IAAI,EAAC,MAAM;QACXC,KAAK,EAAE3D,QAAS;QAChB4D,QAAQ,EAAG1C,CAAC,IAAKjB,WAAW,CAACiB,CAAC,CAAC2C,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC,sBAAsB;QAClCZ,SAAS,EAAC,gCAAgC;QAC1Ca,QAAQ;MAAA;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC,eAEF3D,OAAA;QAAOqD,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAC;MAAI;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACzD3D,OAAA;QACE8D,KAAK,EAAEzD,GAAI;QACX0D,QAAQ,EAAG1C,CAAC,IAAKf,MAAM,CAACe,CAAC,CAAC2C,MAAM,CAACF,KAAK,CAAE;QACxCT,SAAS,EAAC,gCAAgC;QAAAC,QAAA,gBAE1CtD,OAAA;UAAAsD,QAAA,EAAQ;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChC3D,OAAA;UAAAsD,QAAA,EAAQ;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClC3D,OAAA;UAAAsD,QAAA,EAAQ;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpC3D,OAAA;UAAAsD,QAAA,EAAQ;QAAQ;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACzB3D,OAAA;UAAAsD,QAAA,EAAQ;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChC3D,OAAA;UAAAsD,QAAA,EAAQ;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpC3D,OAAA;UAAAsD,QAAA,EAAQ;QAAU;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrB,CAAC,eAET3D,OAAA;QAAOqD,SAAS,EAAC,2BAA2B;QAAAC,QAAA,GAAC,OAAK,EAAC/C,GAAG,EAAC,KAAG;MAAA;QAAAiD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClE3D,OAAA;QACE6D,IAAI,EAAC,OAAO;QACZM,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC,IAAI;QACRC,IAAI,EAAC,GAAG;QACRP,KAAK,EAAEvD,GAAI;QACXwD,QAAQ,EAAG1C,CAAC,IAAKb,MAAM,CAAC8D,MAAM,CAACjD,CAAC,CAAC2C,MAAM,CAACF,KAAK,CAAC,CAAE;QAChDT,SAAS,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eAEF3D,OAAA;QAAOqD,SAAS,EAAC,2BAA2B;QAAAC,QAAA,GAAC,OAAK,EAAC7C,GAAG,EAAC,QAAM;MAAA;QAAA+C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACrE3D,OAAA;QACE6D,IAAI,EAAC,OAAO;QACZM,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC,GAAG;QACPC,IAAI,EAAC,GAAG;QACRP,KAAK,EAAErD,GAAI;QACXsD,QAAQ,EAAG1C,CAAC,IAAKX,MAAM,CAAC4D,MAAM,CAACjD,CAAC,CAAC2C,MAAM,CAACF,KAAK,CAAC,CAAE;QAChDT,SAAS,EAAC;MAAa;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxB,CAAC,eAEF3D,OAAA;QAAOqD,SAAS,EAAC,2BAA2B;QAAAC,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC7D3D,OAAA;QACE8D,KAAK,EAAEnD,OAAQ;QACfoD,QAAQ,EAAG1C,CAAC,IAAKT,UAAU,CAACS,CAAC,CAAC2C,MAAM,CAACF,KAAK,CAAE;QAC5CT,SAAS,EAAC,gCAAgC;QAAAC,QAAA,gBAE1CtD,OAAA;UAAAsD,QAAA,EAAQ;QAAG;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACpB3D,OAAA;UAAAsD,QAAA,EAAQ;QAAe;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChC3D,OAAA;UAAAsD,QAAA,EAAQ;QAAgB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACjC3D,OAAA;UAAAsD,QAAA,EAAQ;QAAiB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC,eAET3D,OAAA;QAAQ6D,IAAI,EAAC,QAAQ;QAACR,SAAS,EAAC,0EAA0E;QAAAC,QAAA,EAAC;MAE3G;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,gBAEP3D,OAAA;MAAKqD,SAAS,EAAC,kCAAkC;MAAAC,QAAA,gBAC/CtD,OAAA;QAAIqD,SAAS,EAAC,kCAAkC;QAAAC,QAAA,EAAC;MAA+B;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACrF3D,OAAA;QAAGqD,SAAS,EAAC,uBAAuB;QAAAC,QAAA,GAAC,eAAa,EAACvC,SAAS,EAAC,GAAC,EAACE,IAAI;MAAA;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxE3D,OAAA;QAAGqD,SAAS,EAAC,eAAe;QAAAC,QAAA,EAAC;MAAmD;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzD,EAAA,CA9JuBD,UAAU;EAAA,QAWfJ,WAAW;AAAA;AAAA0E,EAAA,GAXNtE,UAAU;AAAA,IAAAsE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}