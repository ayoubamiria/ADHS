{"ast":null,"code":"import React,{useState}from\"react\";import{useNavigate,useLocation}from\"react-router-dom\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function Formulaire(){const[hostname,setHostname]=useState(\"\");const[box,setBox]=useState(\"ubuntu/trusty64\");const[ram,setRam]=useState(2);const[cpu,setCpu]=useState(1);const[network,setNetwork]=useState(\"NAT\");const[submitted,setSubmitted]=useState(false);const[ipAddress,setIpAddress]=useState(\"\");const[port,setPort]=useState(\"\");const navigate=useNavigate();const location=useLocation();const remoteConfig=location.state||{};const isRemote=remoteConfig.mode===\"distant\";const handleSubmit=async e=>{e.preventDefault();if(!hostname.trim()){alert(\"Le champ Hostname est requis.\");return;}const requestData={vm_name:hostname,box:box,ram:ram,cpu:cpu,network:network};if(isRemote){requestData.remote_ip=remoteConfig.remote_ip;requestData.remote_password=remoteConfig.remote_password;requestData.remote_user=remoteConfig.remote_user;// Transmet le login reçu depuis DistantConfig\nrequestData.remote_os=remoteConfig.remote_os;requestData.hypervisor=remoteConfig.hypervisor;}try{const endpoint=isRemote?\"http://localhost:5000/create-vm-remote\":\"http://localhost:5000/create-vm\";const response=await fetch(endpoint,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify(requestData)});const data=await response.json();if(response.ok){setIpAddress(data.ipAddress);setPort(data.port);setSubmitted(true);const newMachine={hostname:hostname,box:box,network:network,ram:`${ram} GB`,cpu:`${cpu} vCPUs`,status:\"Running\",date:new Date().toLocaleDateString(),ipAddress:data.ipAddress,port:data.port};const storedMachines=JSON.parse(localStorage.getItem(\"vms\"))||[];const updatedMachines=[...storedMachines,newMachine];localStorage.setItem(\"vms\",JSON.stringify(updatedMachines));window.dispatchEvent(new Event(\"storage\"));}else{alert(`❌ Erreur: ${data.error}`);}}catch(error){console.error(\"Erreur de requête:\",error);alert(\"Erreur lors de la communication avec le serveur.\");}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute top-4 right-4\",children:/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigate(\"/dashboard\"),className:\"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\",children:\"Dashboard\"})}),/*#__PURE__*/_jsxs(\"h1\",{className:\"text-4xl font-bold text-teal-600 mb-6\",children:[\"Create a Virtual Machine (\",isRemote?\"Distant Mode\":\"Local Mode\",\")\"]}),!submitted?/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,className:\"bg-white p-6 rounded-lg shadow-lg w-96\",children:[/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium\",children:\"Host name:\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:hostname,onChange:e=>setHostname(e.target.value),placeholder:\"Enter your host name\",className:\"w-full p-2 border rounded mb-4\",required:true}),/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium\",children:\"Box:\"}),/*#__PURE__*/_jsxs(\"select\",{value:box,onChange:e=>setBox(e.target.value),className:\"w-full p-2 border rounded mb-4\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"ubuntu/trusty64\"}),/*#__PURE__*/_jsx(\"option\",{children:\"laravel/homestead\"}),/*#__PURE__*/_jsx(\"option\",{children:\"hashicorp/precise64\"}),/*#__PURE__*/_jsx(\"option\",{children:\"centos/7\"}),/*#__PURE__*/_jsx(\"option\",{children:\"debian/jessie64\"}),/*#__PURE__*/_jsx(\"option\",{children:\"hashicorp/precise32\"}),/*#__PURE__*/_jsx(\"option\",{children:\"scotch/box\"})]}),/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium\",children:[\"RAM: \",ram,\" GB\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"2\",max:\"16\",step:\"2\",value:ram,onChange:e=>setRam(Number(e.target.value)),className:\"w-full mb-4\"}),/*#__PURE__*/_jsxs(\"label\",{className:\"block text-sm font-medium\",children:[\"CPU: \",cpu,\" vCPUs\"]}),/*#__PURE__*/_jsx(\"input\",{type:\"range\",min:\"1\",max:\"8\",step:\"1\",value:cpu,onChange:e=>setCpu(Number(e.target.value)),className:\"w-full mb-4\"}),/*#__PURE__*/_jsx(\"label\",{className:\"block text-sm font-medium\",children:\"Network:\"}),/*#__PURE__*/_jsxs(\"select\",{value:network,onChange:e=>setNetwork(e.target.value),className:\"w-full p-2 border rounded mb-4\",children:[/*#__PURE__*/_jsx(\"option\",{children:\"NAT\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Bridged Adapter\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Internal Network\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Host-only Adapter\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\",children:\"Create\"})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"success-message text-center mt-6\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-2xl font-bold text-teal-600\",children:\"\\u2705 Machine created successfully!\"}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-lg text-gray-700\",children:[\"SSH address: \",ipAddress,\":\",port]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600\",children:\"Utilisez cette adresse pour vous connecter via SSH.\"})]})]});}","map":{"version":3,"names":["React","useState","useNavigate","useLocation","jsx","_jsx","jsxs","_jsxs","Formulaire","hostname","setHostname","box","setBox","ram","setRam","cpu","setCpu","network","setNetwork","submitted","setSubmitted","ipAddress","setIpAddress","port","setPort","navigate","location","remoteConfig","state","isRemote","mode","handleSubmit","e","preventDefault","trim","alert","requestData","vm_name","remote_ip","remote_password","remote_user","remote_os","hypervisor","endpoint","response","fetch","method","headers","body","JSON","stringify","data","json","ok","newMachine","status","date","Date","toLocaleDateString","storedMachines","parse","localStorage","getItem","updatedMachines","setItem","window","dispatchEvent","Event","error","console","className","children","onClick","onSubmit","type","value","onChange","target","placeholder","required","min","max","step","Number"],"sources":["C:/Users/User/formvm/ClusterForm/src/formulaire.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nexport default function Formulaire() {\n  const [hostname, setHostname] = useState(\"\");\n  const [box, setBox] = useState(\"ubuntu/trusty64\");\n  const [ram, setRam] = useState(2);\n  const [cpu, setCpu] = useState(1);\n  const [network, setNetwork] = useState(\"NAT\");\n  const [submitted, setSubmitted] = useState(false);\n  const [ipAddress, setIpAddress] = useState(\"\");\n  const [port, setPort] = useState(\"\");\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const remoteConfig = location.state || {};\n  const isRemote = remoteConfig.mode === \"distant\";\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!hostname.trim()) {\n      alert(\"Le champ Hostname est requis.\");\n      return;\n    }\n\n    const requestData = {\n      vm_name: hostname,\n      box: box,\n      ram: ram,\n      cpu: cpu,\n      network: network\n    };\n\n    if (isRemote) {\n      requestData.remote_ip = remoteConfig.remote_ip;\n      requestData.remote_password = remoteConfig.remote_password;\n      requestData.remote_user = remoteConfig.remote_user; // Transmet le login reçu depuis DistantConfig\n      requestData.remote_os = remoteConfig.remote_os;\n      requestData.hypervisor = remoteConfig.hypervisor;\n    }\n\n    try {\n      const endpoint = isRemote\n        ? \"http://localhost:5000/create-vm-remote\"\n        : \"http://localhost:5000/create-vm\";\n      const response = await fetch(endpoint, {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(requestData),\n      });\n      const data = await response.json();\n\n      if (response.ok) {\n        setIpAddress(data.ipAddress);\n        setPort(data.port);\n        setSubmitted(true);\n\n        const newMachine = {\n          hostname: hostname,\n          box: box,\n          network: network,\n          ram: `${ram} GB`,\n          cpu: `${cpu} vCPUs`,\n          status: \"Running\",\n          date: new Date().toLocaleDateString(),\n          ipAddress: data.ipAddress,\n          port: data.port\n        };\n\n        const storedMachines = JSON.parse(localStorage.getItem(\"vms\")) || [];\n        const updatedMachines = [...storedMachines, newMachine];\n        localStorage.setItem(\"vms\", JSON.stringify(updatedMachines));\n        window.dispatchEvent(new Event(\"storage\"));\n      } else {\n        alert(`❌ Erreur: ${data.error}`);\n      }\n    } catch (error) {\n      console.error(\"Erreur de requête:\", error);\n      alert(\"Erreur lors de la communication avec le serveur.\");\n    }\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-teal-100 to-white p-4\">\n      <div className=\"absolute top-4 right-4\">\n        <button\n          onClick={() => navigate(\"/dashboard\")}\n          className=\"bg-teal-500 text-white px-4 py-2 rounded-lg shadow-md hover:bg-teal-600\"\n        >\n          Dashboard\n        </button>\n      </div>\n      <h1 className=\"text-4xl font-bold text-teal-600 mb-6\">\n        Create a Virtual Machine ({isRemote ? \"Distant Mode\" : \"Local Mode\"})\n      </h1>\n      {!submitted ? (\n        <form onSubmit={handleSubmit} className=\"bg-white p-6 rounded-lg shadow-lg w-96\">\n          <label className=\"block text-sm font-medium\">Host name:</label>\n          <input\n            type=\"text\"\n            value={hostname}\n            onChange={(e) => setHostname(e.target.value)}\n            placeholder=\"Enter your host name\"\n            className=\"w-full p-2 border rounded mb-4\"\n            required\n          />\n\n          <label className=\"block text-sm font-medium\">Box:</label>\n          <select\n            value={box}\n            onChange={(e) => setBox(e.target.value)}\n            className=\"w-full p-2 border rounded mb-4\"\n          >\n            <option>ubuntu/trusty64</option>\n            <option>laravel/homestead</option>\n            <option>hashicorp/precise64</option>\n            <option>centos/7</option>\n            <option>debian/jessie64</option>\n            <option>hashicorp/precise32</option>\n            <option>scotch/box</option>\n          </select>\n\n          <label className=\"block text-sm font-medium\">RAM: {ram} GB</label>\n          <input\n            type=\"range\"\n            min=\"2\"\n            max=\"16\"\n            step=\"2\"\n            value={ram}\n            onChange={(e) => setRam(Number(e.target.value))}\n            className=\"w-full mb-4\"\n          />\n\n          <label className=\"block text-sm font-medium\">CPU: {cpu} vCPUs</label>\n          <input\n            type=\"range\"\n            min=\"1\"\n            max=\"8\"\n            step=\"1\"\n            value={cpu}\n            onChange={(e) => setCpu(Number(e.target.value))}\n            className=\"w-full mb-4\"\n          />\n\n          <label className=\"block text-sm font-medium\">Network:</label>\n          <select\n            value={network}\n            onChange={(e) => setNetwork(e.target.value)}\n            className=\"w-full p-2 border rounded mb-4\"\n          >\n            <option>NAT</option>\n            <option>Bridged Adapter</option>\n            <option>Internal Network</option>\n            <option>Host-only Adapter</option>\n          </select>\n\n          <button type=\"submit\" className=\"w-full bg-teal-500 text-white p-2 rounded-lg shadow-md hover:bg-teal-600\">\n            Create\n          </button>\n        </form>\n      ) : (\n        <div className=\"success-message text-center mt-6\">\n          <h2 className=\"text-2xl font-bold text-teal-600\">✅ Machine created successfully!</h2>\n          <p className=\"text-lg text-gray-700\">SSH address: {ipAddress}:{port}</p>\n          <p className=\"text-gray-600\">Utilisez cette adresse pour vous connecter via SSH.</p>\n        </div>\n      )}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}