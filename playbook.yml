---
- name: Build et push des images Docker (backend & frontend)
  hosts: localhost
  connection: local
  gather_facts: no

  vars:
    docker_username: "ayoub126"
    backend_image: "backend:latest"
    frontend_image: "frontend:latest"
    backend_context: "./back_vag"
    backend_dockerfile: "Dockerfile"
    frontend_context: "./ClusterForm"
    frontend_dockerfile: "Dockerfile.dev"
    docker_password: "{{ docker_password }}"

  tasks:

    - name: Builder l'image Docker du backend
      shell: >
        docker build -t {{ backend_image }}
        -f {{ backend_context }}/{{ backend_dockerfile }}
        {{ backend_context }}

    - name: Builder l'image Docker du frontend
      shell: >
        docker build -t {{ frontend_image }}
        -f {{ frontend_context }}/{{ frontend_dockerfile }}
        {{ frontend_context }}

    - name: Connexion à Docker Hub
      shell: echo "{{ docker_password }}" | docker login -u "{{ docker_username }}" --password-stdin
    
    - name: Retagger l'image backend pour ton repository Docker Hub
      shell: docker tag {{ backend_image }} {{ docker_username }}/backend:latest

    - name: Pusher l'image backend
      shell: docker push {{ docker_username }}/backend:latest

    - name: Retagger l'image frontend pour ton repository Docker Hub
      shell: docker tag {{ frontend_image }} {{ docker_username }}/frontend:latest

    - name: Pusher l'image frontend
      shell: docker push {{ docker_username }}/frontend:latest

- name: Déploiement Kubernetes sur k8s-server
  hosts: k8s-server
  gather_facts: no

  vars:
    workspace: "/var/lib/jenkins/workspace/ADHS/k8s"
    dest: "/tmp/k8s"
    files:
      - pv.yaml
      - pvc.yaml
      - service_back.yaml
      - service_front.yaml
      - deployment_back.yaml
      - deployment_front.yaml

  tasks:
    - name: Créer le namespace si nécessaire
      raw: kubectl create namespace ayoub || true

    - name: Créer le répertoire {{ dest }} sur la cible
      raw: mkdir -p {{ dest }}

    - name: Synchroniser tout le dossier k8s vers le serveur
      delegate_to: localhost
      shell: |
        rsync -avz \
          --omit-dir-times --no-perms --no-owner --no-group \
          -e "ssh -i /var/lib/jenkins/.ssh/id_rsa -o StrictHostKeyChecking=no" \
          "{{ workspace }}/" \
          "{{ ansible_user }}@{{ inventory_hostname }}:{{ dest }}/"

    - name: Appliquer tous les manifests Kubernetes
      raw: |
        for f in {{ files | join(' ') }}; do
          kubectl apply -f {{ dest }}/$f
        done
